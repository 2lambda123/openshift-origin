apiVersion: template.openshift.io/v1
kind: Template
parameters:
- name: NAMESPACE
  value: openshift-controller-manager
- name: KUBE_SYSTEM
  value: kube-system
- name: OPENSHIFT_INFRA
  value: openshift-infra
objects:

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: system:openshift:openshift-controller-manager
  rules:
  # we run cluster resource quota, so we have to be able to see all resources
  - apiGroups:
    - "*"
    resources:
    - "*"
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: system:openshift:openshift-controller-manager
  roleRef:
    kind: ClusterRole
    name: system:openshift:openshift-controller-manager
  subjects:
  - kind: ServiceAccount
    namespace: openshift-controller-manager
    name: openshift-controller-manager

# needed to get the legacy lock that we used to use
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: system:openshift:leader-locking-openshift-controller-manager
    namespace: ${KUBE_SYSTEM}
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
  - apiGroups:
    - ""
    resourceNames:
    - openshift-master-controllers
    resources:
    - configmaps
    verbs:
    - get
    - create
    - update
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    namespace: ${KUBE_SYSTEM}
    name: system:openshift:leader-locking-openshift-controller-manager
  roleRef:
    kind: Role
    name: system:openshift:leader-locking-openshift-controller-manager
  subjects:
  - kind: ServiceAccount
    namespace: ${NAMESPACE}
    name: openshift-controller-manager

# needed to support the "use separate service accounts" feature.
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: system:openshift:sa-creating-openshift-controller-manager
    namespace: ${OPENSHIFT_INFRA}
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - create
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    namespace: ${OPENSHIFT_INFRA}
    name: system:openshift:sa-creating-openshift-controller-manager
  roleRef:
    kind: Role
    name: system:openshift:sa-creating-openshift-controller-manager
  subjects:
  - kind: ServiceAccount
    namespace: ${NAMESPACE}
    name: openshift-controller-manager
