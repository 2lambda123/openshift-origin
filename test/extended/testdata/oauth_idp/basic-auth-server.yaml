apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx-basic-auth
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-basic-auth
    spec:
      containers:
      - name: nginx
        image: nginx:1.8
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/
        - name: cache
          mountPath: /var/cache/nginx/
        - name: htpasswd-secret
          mountPath: /etc/secret
        - name: index
          mountPath: /var/www
        securityContext:
          privileged: true
      volumes:
       - name: config
         configMap:
           name: config
       - name: htpasswd-secret
         secret:
           secretName: htpasswd-secret
       - name: index
         configMap:
           name: index
       - name: cache
         emptyDir: {}
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  labels:
    app: nginx-basic-auth
spec:
  ports:
    - name: login
      port: 8080
  selector:
    app: nginx-basic-auth

---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: nginx-basic-auth
  name: nginx-route
spec:
  port:
    targetPort: login
  to:
    kind: Service
    name: nginx-svc
  tls:
    termination: edge

---

apiVersion: v1
kind: Secret
metadata:
  name: htpasswd-secret
data:
  htpasswd: ZnJhbnRhOiRhcHIxJFo3V0R0b2VKJFFwdFEyVHNPOWVOamlOOWU4NHY3dDAK # franta:natrabanta

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: index
data:
  index.json: |
    {"sub": "franta"}
  401.json: |
    {"error": "bad-user"}

---

apiVersion: v1
kind: ClusterRole
metadata:
  name: scc-privileged-user
rules:
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged
