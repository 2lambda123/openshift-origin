apiVersion: template.openshift.io/v1
kind: Template
parameters:
- name: BASE64_SRC_TGZ
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: http2
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: serving-cert-http2
  spec:
    selector:
      name: http2
    ports:
      - name: https
        protocol: TCP
        port: 8443
        targetPort: 8443
      - name: http
        protocol: TCP
        port: 8080
        targetPort: 8080
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: src-config
  data:
    data.base64: |-
      ${BASE64_SRC_TGZ}
- apiVersion: v1
  kind: Pod
  metadata:
    name: http2
    labels:
      name: http2
  spec:
    containers:
    - image: openshift/origin-release:golang-1.15
      name: server
      command: ["/bin/bash", "-c"]
      args:
        - set -e;
          cd /var/tmp;
          base64 -d /src/data.base64 | tar -zxf -;
          mv router-http2-server.backend server.go;
          go run server.go
      startupProbe:
        failureThreshold: 20
        tcpSocket:
          port: 8080
        initialDelaySeconds: 30
        periodSeconds: 5
        timeoutSeconds: 3
      readinessProbe:
        failureThreshold: 3
        tcpSocket:
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
      livenessProbe:
        failureThreshold: 3
        tcpSocket:
          port: 8080
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
      ports:
      - containerPort: 8443
        protocol: TCP
      - containerPort: 8080
        protocol: TCP
      env:
      - name: GODEBUG
        value: http2debug=1
      - name: GO111MODULE
        value: "auto"
      - name: GOCACHE
        value: "/tmp"
      - name: GOPROXY
        value: "https://goproxy.golang.org,direct"
      volumeMounts:
      - mountPath: /src
        name: src-volume
      - mountPath: /etc/serving-cert
        name: cert
    volumes:
    - name: src-volume
      configMap:
        name: src-config
    - name: cert
      secret:
        secretName: serving-cert-http2
    terminationGracePeriodSeconds: 1
