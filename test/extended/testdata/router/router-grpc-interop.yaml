apiVersion: template.openshift.io/v1
kind: Template
parameters:
- name: BASE64_SRC_TGZ
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: grpc-interop
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: service-cert-grpc-interop
  spec:
    selector:
      app: grpc-interop
    ports:
      - port: 8443
        name: https
        targetPort: 8443
        protocol: TCP
- apiVersion: v1
  kind: ConfigMap
  labels:
    app: grpc-interop
  metadata:
    name: src-config
  data:
    data.base64: |-
      ${BASE64_SRC_TGZ}
- apiVersion: v1
  kind: Pod
  metadata:
    name: grpc-interop
    labels:
      app: grpc-interop
  spec:
    containers:
    - image: openshift/origin-release:golang-1.15
      name: server
      command: ["/bin/bash", "-c"]
      args:
        - set -ex;
          date;
          cd /var/tmp;
          base64 -d /src/data.base64 | tar -zxf -;
          mv router-grpc-interop-gomod.data go.mod;
          mv router-grpc-interop-gosum.data go.sum;
          mv router-grpc-interop-server.data server.go;
          GOPROXY=https://goproxy.golang.org,direct time go mod vendor;
          GRPC_GO_LOG_VERBOSITY_LEVEL=99 GRPC_GO_LOG_SEVERITY_LEVEL=info GODEBUG=http2debug=1 go run server.go
      ports:
      - containerPort: 8443
        protocol: TCP
      volumeMounts:
      - mountPath: /src
        name: src-volume
      - mountPath: /etc/serving-cert
        name: cert
    volumes:
    - name: src-volume
      configMap:
        name: src-config
    - name: cert
      secret:
        secretName: service-cert-grpc-interop
    terminationGracePeriodSeconds: 1
