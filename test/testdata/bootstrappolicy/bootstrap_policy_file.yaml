apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: sudoer
  rules:
  - apiGroups:
    - ""
    - user.openshift.io
    resourceNames:
    - system:admin
    resources:
    - systemusers
    - users
    verbs:
    - impersonate
  - apiGroups:
    - ""
    - user.openshift.io
    resourceNames:
    - system:masters
    resources:
    - groups
    - systemgroups
    verbs:
    - impersonate
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:scope-impersonation
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - userextras/scopes.authorization.openshift.io
    verbs:
    - impersonate
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: cluster-reader
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
    name: system:openshift:aggregate-to-cluster-reader
  rules:
  - apiGroups:
    - ""
    resources:
    - componentstatuses
    - nodes
    - nodes/status
    - persistentvolumeclaims/status
    - persistentvolumes
    - persistentvolumes/status
    - pods/binding
    - pods/eviction
    - podtemplates
    - securitycontextconstraints
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    - validatingwebhookconfigurations
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets/status
    - deployments/status
    - replicasets/status
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    - customresourcedefinitions/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apiregistration.k8s.io
    resources:
    - apiservices
    - apiservices/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs/status
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets/status
    - deployments/status
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    - ingresses/status
    - jobs
    - jobs/status
    - podsecuritypolicies
    - replicasets/status
    - replicationcontrollers
    - storageclasses
    - thirdpartyresources
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - events.k8s.io
    resources:
    - events
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets/status
    - podsecuritypolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterrolebindings
    - clusterroles
    - rolebindings
    - roles
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - settings.k8s.io
    resources:
    - podpresets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    - volumeattachments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - scheduling.k8s.io
    resources:
    - priorityclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - clusterrolebindings
    - clusterroles
    - rolebindingrestrictions
    - rolebindings
    - roles
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/details
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    - imagesignatures
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
  - apiGroups:
    - ""
    - oauth.openshift.io
    resources:
    - oauthclientauthorizations
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projectrequests
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - quota.openshift.io
    resources:
    - clusterresourcequotas
    - clusterresourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - clusternetworks
    - egressnetworkpolicies
    - hostsubnets
    - netnamespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - security.openshift.io
    resources:
    - rangeallocations
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - template.openshift.io
    resources:
    - brokertemplateinstances
    - templateinstances/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - user.openshift.io
    resources:
    - groups
    - identities
    - useridentitymappings
    - users
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - localresourceaccessreviews
    - localsubjectaccessreviews
    - resourceaccessreviews
    - selfsubjectrulesreviews
    - subjectaccessreviews
    - subjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - security.openshift.io
    resources:
    - podsecuritypolicyreviews
    - podsecuritypolicyselfsubjectreviews
    - podsecuritypolicysubjectreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - nodes/metrics
    - nodes/spec
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - create
    - get
  - nonResourceURLs:
    - '*'
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: cluster-debugger
  rules:
  - nonResourceURLs:
    - /debug/pprof
    - /debug/pprof/*
    - /metrics
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-docker
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/docker
    - builds/optimizeddocker
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-custom
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/custom
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-source
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/source
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-jenkinspipeline
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/jenkinspipeline
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: storage-admin
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: system:openshift:aggregate-to-admin
  rules:
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - localresourceaccessreviews
    - localsubjectaccessreviews
    - subjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - security.openshift.io
    resources:
    - podsecuritypolicyreviews
    - podsecuritypolicyselfsubjectreviews
    - podsecuritypolicysubjectreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - rolebindingrestrictions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs
    - buildconfigs/webhooks
    - builds
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/log
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs/instantiate
    - buildconfigs/instantiatebinary
    - builds/clone
    verbs:
    - create
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/details
    verbs:
    - update
  - apiGroups:
    - build.openshift.io
    resources:
    - jenkins
    verbs:
    - admin
    - edit
    - view
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    - deploymentconfigs/scale
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigrollbacks
    - deploymentconfigs/instantiate
    - deploymentconfigs/rollback
    verbs:
    - create
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/log
    - deploymentconfigs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreammappings
    - imagestreams
    - imagestreams/secrets
    - imagestreamtags
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimports
    verbs:
    - create
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - ""
    - quota.openshift.io
    resources:
    - appliedclusterresourcequotas
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/custom-host
    verbs:
    - create
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/status
    verbs:
    - update
  - apiGroups:
    - ""
    - template.openshift.io
    resources:
    - processedtemplates
    - templateconfigs
    - templateinstances
    - templates
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - extensions
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildlogs
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotausages
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - resourceaccessreviews
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: system:openshift:aggregate-to-edit
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs
    - buildconfigs/webhooks
    - builds
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/log
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs/instantiate
    - buildconfigs/instantiatebinary
    - builds/clone
    verbs:
    - create
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/details
    verbs:
    - update
  - apiGroups:
    - build.openshift.io
    resources:
    - jenkins
    verbs:
    - edit
    - view
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    - deploymentconfigs/scale
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigrollbacks
    - deploymentconfigs/instantiate
    - deploymentconfigs/rollback
    verbs:
    - create
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/log
    - deploymentconfigs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreammappings
    - imagestreams
    - imagestreams/secrets
    - imagestreamtags
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimports
    verbs:
    - create
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - get
  - apiGroups:
    - ""
    - quota.openshift.io
    resources:
    - appliedclusterresourcequotas
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/custom-host
    verbs:
    - create
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - template.openshift.io
    resources:
    - processedtemplates
    - templateconfigs
    - templateinstances
    - templates
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - extensions
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildlogs
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotausages
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:openshift:aggregate-to-view
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs
    - buildconfigs/webhooks
    - builds
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/log
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - build.openshift.io
    resources:
    - jenkins
    verbs:
    - view
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    - deploymentconfigs/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/log
    - deploymentconfigs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreammappings
    - imagestreams
    - imagestreamtags
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - get
  - apiGroups:
    - ""
    - quota.openshift.io
    resources:
    - appliedclusterresourcequotas
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - template.openshift.io
    resources:
    - processedtemplates
    - templateconfigs
    - templateinstances
    - templates
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildlogs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotausages
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: A user that can get basic information about projects.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: basic-user
  rules:
  - apiGroups:
    - ""
    - user.openshift.io
    resourceNames:
    - "~"
    resources:
    - users
    verbs:
    - get
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projectrequests
    verbs:
    - list
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - clusterroles
    verbs:
    - get
    - list
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - selfsubjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: self-access-reviewer
  rules:
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - selfsubjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      openshift.io/description: A user that can request projects.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: self-provisioner
  rules:
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projectrequests
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      openshift.io/description: A user that can get basic cluster status information.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: cluster-status
  rules:
  - nonResourceURLs:
    - /healthz
    - /healthz/*
    verbs:
    - get
  - nonResourceURLs:
    - /version
    - /version/*
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /oapi
    - /oapi/*
    - /openapi/v2
    - /swaggerapi
    - /swaggerapi/*
    - /swagger.json
    - /swagger-2.0.0.pb-v1
    - /osapi
    - /osapi/
    - /.well-known
    - /.well-known/*
    - /
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-auditor
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: Grants the right to pull images from within a project.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-puller
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: Grants the right to push and pull images from within
        a project.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-pusher
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: Grants the right to build, push and pull images from
        within a project.  Used primarily with service accounts for builds.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-builder
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams
    verbs:
    - create
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/details
    verbs:
    - update
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-pruner
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - replicationcontrollers
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - limitranges
    verbs:
    - list
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs
    - builds
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    verbs:
    - get
    - list
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    verbs:
    - delete
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    - imagestreams
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/status
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-signer
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    - imagestreams/layers
    verbs:
    - get
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagesignatures
    verbs:
    - create
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: Grants the right to deploy within a project.  Used
        primarily with service accounts for automated deployments.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:deployer
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/log
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - list
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamtags
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:master
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:oauth-token-deleter
  rules:
  - apiGroups:
    - ""
    - oauth.openshift.io
    resources:
    - oauthaccesstokens
    - oauthauthorizetokens
    verbs:
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:router
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - route.openshift.io
    resources:
    - routes/status
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:registry
  rules:
  - apiGroups:
    - ""
    resources:
    - imagestreams
    - limitranges
    - resourcequotas
    verbs:
    - list
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    - imagestreamtags
    verbs:
    - delete
    - get
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreams/secrets
    verbs:
    - get
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    - imagestreams
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreammappings
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-admin
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/spec
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-reader
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/metrics
    - nodes/spec
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/stats
    verbs:
    - create
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:sdn-reader
  rules:
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - egressnetworkpolicies
    - hostsubnets
    - netnamespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - clusternetworks
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:sdn-manager
  rules:
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - hostsubnets
    - netnamespaces
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - clusternetworks
    verbs:
    - create
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:webhook
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs/webhooks
    verbs:
    - create
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:discovery
  rules:
  - nonResourceURLs:
    - /version
    - /version/*
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /oapi
    - /oapi/*
    - /openapi/v2
    - /swaggerapi
    - /swaggerapi/*
    - /swagger.json
    - /swagger-2.0.0.pb-v1
    - /osapi
    - /osapi/
    - /.well-known
    - /.well-known/*
    - /
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: registry-admin
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreammappings
    - imagestreams
    - imagestreams/secrets
    - imagestreamtags
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimports
    verbs:
    - create
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - localresourceaccessreviews
    - localsubjectaccessreviews
    - subjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - delete
    - get
  - apiGroups:
    - ""
    - authorization.openshift.io
    resources:
    - resourceaccessreviews
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: registry-editor
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreammappings
    - imagestreams
    - imagestreams/secrets
    - imagestreamtags
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimports
    verbs:
    - create
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: registry-viewer
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreammappings
    - imagestreams
    - imagestreamtags
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    - project.openshift.io
    resources:
    - projects
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:templateservicebroker-client
  rules:
  - nonResourceURLs:
    - /brokers/template.openshift.io/*
    verbs:
    - delete
    - get
    - put
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:replication-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:endpoint-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:replicaset-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:garbage-collector-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:job-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:hpa-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:daemonset-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:disruption-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:namespace-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:gc-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:certificate-signing-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:statefulset-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:deploymentconfig-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:deployment-controller
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:build-controller
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs
    verbs:
    - get
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/custom
    - builds/docker
    - builds/jenkinspipeline
    - builds/optimizeddocker
    - builds/source
    verbs:
    - create
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - security.openshift.io
    resources:
    - podsecuritypolicysubjectreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:build-config-change-controller
  rules:
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs/instantiate
    verbs:
    - create
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:deployer-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:deploymentconfig-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/status
    verbs:
    - update
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-instance-controller
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - template.openshift.io
    resources:
    - templateinstances/status
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-instance-finalizer-controller
  rules:
  - apiGroups:
    - template.openshift.io
    resources:
    - templateinstances/status
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:origin-namespace-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces/finalize
    - namespaces/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:serviceaccount-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:serviceaccount-pull-secrets-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:image-trigger-controller
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams
    verbs:
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - buildconfigs/instantiate
    verbs:
    - create
  - apiGroups:
    - ""
    - build.openshift.io
    resources:
    - builds/custom
    - builds/docker
    - builds/jenkinspipeline
    - builds/optimizeddocker
    - builds/source
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:service-serving-cert-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:image-import-controller
  rules:
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams
    verbs:
    - create
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - images
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimports
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:sdn-controller
  rules:
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - clusternetworks
    verbs:
    - create
    - get
    - update
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - hostsubnets
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - network.openshift.io
    resources:
    - netnamespaces
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:cluster-quota-reconciliation-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - quota.openshift.io
    resources:
    - clusterresourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:unidling-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - replicationcontrollers/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/scale
    - replicasets/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/scale
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:service-ingress-ip-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:ingress-to-route-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - ingress
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - route.openshift.io
    resources:
    - routes
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - route.openshift.io
    resources:
    - routes/custom-host
    verbs:
    - create
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:pv-recycler-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:resourcequota-controller
  rules:
  - apiGroups:
    - ""
    resources:
    - resourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - resourcequotas
    verbs:
    - list
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - list
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - list
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - list
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:horizontal-pod-autoscaler
  rules:
  - apiGroups:
    - ""
    - apps.openshift.io
    resources:
    - deploymentconfigs/scale
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-service-broker
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - authorization.openshift.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - template.openshift.io
    resources:
    - brokertemplateinstances
    verbs:
    - create
    - delete
    - get
    - update
  - apiGroups:
    - template.openshift.io
    resources:
    - brokertemplateinstances/finalizers
    verbs:
    - update
  - apiGroups:
    - template.openshift.io
    resources:
    - templateinstances
    verbs:
    - assign
    - create
    - delete
    - get
  - apiGroups:
    - template.openshift.io
    resources:
    - templates
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - configmaps
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - routes
    verbs:
    - get
  - apiGroups:
    - route.openshift.io
    resources:
    - routes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:default-rolebindings-controller
  rules:
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:namespace-security-allocation-controller
  rules:
  - apiGroups:
    - security.openshift.io
    resources:
    - rangeallocations
    verbs:
    - create
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
  rules:
  - nonResourceURLs:
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /healthz
    - /openapi
    - /openapi/*
    - /swagger-2.0.0.pb-v1
    - /swagger.json
    - /swaggerapi
    - /swaggerapi/*
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    verbs:
    - create
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: A user that has edit rights within the project and
        can change the project's membership.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: admin
  rules: null
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: A user that can create and edit most objects in a
        project, but can not update the project's membership.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: edit
  rules: null
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: A user who can view but not edit any resources within
        the project. They can not view secrets or membership.
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: view
  rules: null
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: system:aggregate-to-admin
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: system:aggregate-to-edit
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:aggregate-to-view
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:heapster
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - delete
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-problem-detector
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kubelet-api-admin
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/spec
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-bootstrapper
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:auth-delegator
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-aggregator
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints
    - secrets
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - endpoints
    - namespaces
    - secrets
    - serviceaccounts
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    - secrets
    - serviceaccounts
    verbs:
    - update
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
  - apiGroups:
    - ""
    resourceNames:
    - kube-scheduler
    resources:
    - endpoints
    verbs:
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:persistent-volume-provisioner
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:csi-external-provisioner
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:csi-external-attacher
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:aws-cloud-provider
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/nodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:masters
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:master
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-admins
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:master
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:node-admins
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: cluster-admins
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:cluster-admins
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:admin
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: cluster-readers
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:cluster-readers
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: basic-users
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: basic-user
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: self-access-reviewers
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: self-access-reviewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: self-provisioners
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: self-provisioner
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated:oauth
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:oauth-token-deleters
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:oauth-token-deleter
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: cluster-status-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-status
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-proxiers
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:sdn-readers
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:sdn-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:webhooks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:webhook
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:discovery
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-docker-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:build-strategy-docker
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-source-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:build-strategy-source
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:build-strategy-jenkinspipeline-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:build-strategy-jenkinspipeline
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-bootstrapper
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-bootstrapper
  subjects:
  - kind: ServiceAccount
    name: node-bootstrapper
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:scope-impersonation
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:scope-impersonation
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:nodes
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:discovery-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:discovery
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:build-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:build-controller
  subjects:
  - kind: ServiceAccount
    name: build-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:build-config-change-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:build-config-change-controller
  subjects:
  - kind: ServiceAccount
    name: build-config-change-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:deployer-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:deployer-controller
  subjects:
  - kind: ServiceAccount
    name: deployer-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:deploymentconfig-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:deploymentconfig-controller
  subjects:
  - kind: ServiceAccount
    name: deploymentconfig-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-instance-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:template-instance-controller
  subjects:
  - kind: ServiceAccount
    name: template-instance-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-instance-controller:admin
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: template-instance-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-instance-finalizer-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:template-instance-finalizer-controller
  subjects:
  - kind: ServiceAccount
    name: template-instance-finalizer-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-instance-finalizer-controller:admin
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: template-instance-finalizer-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:origin-namespace-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:origin-namespace-controller
  subjects:
  - kind: ServiceAccount
    name: origin-namespace-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:serviceaccount-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:serviceaccount-controller
  subjects:
  - kind: ServiceAccount
    name: serviceaccount-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:serviceaccount-pull-secrets-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:serviceaccount-pull-secrets-controller
  subjects:
  - kind: ServiceAccount
    name: serviceaccount-pull-secrets-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:image-trigger-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:image-trigger-controller
  subjects:
  - kind: ServiceAccount
    name: image-trigger-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:service-serving-cert-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:service-serving-cert-controller
  subjects:
  - kind: ServiceAccount
    name: service-serving-cert-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:image-import-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:image-import-controller
  subjects:
  - kind: ServiceAccount
    name: image-import-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:sdn-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:sdn-controller
  subjects:
  - kind: ServiceAccount
    name: sdn-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:cluster-quota-reconciliation-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:cluster-quota-reconciliation-controller
  subjects:
  - kind: ServiceAccount
    name: cluster-quota-reconciliation-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:unidling-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:unidling-controller
  subjects:
  - kind: ServiceAccount
    name: unidling-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:service-ingress-ip-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:service-ingress-ip-controller
  subjects:
  - kind: ServiceAccount
    name: service-ingress-ip-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:ingress-to-route-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:ingress-to-route-controller
  subjects:
  - kind: ServiceAccount
    name: ingress-to-route-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:pv-recycler-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:pv-recycler-controller
  subjects:
  - kind: ServiceAccount
    name: pv-recycler-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:resourcequota-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:resourcequota-controller
  subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:horizontal-pod-autoscaler
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:controller:horizontal-pod-autoscaler
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:template-service-broker
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:template-service-broker
  subjects:
  - kind: ServiceAccount
    name: template-service-broker
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-puller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-puller
  subjects:
  - kind: ServiceAccount
    name: default-rolebindings-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:image-builder
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-builder
  subjects:
  - kind: ServiceAccount
    name: default-rolebindings-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:deployer
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:deployer
  subjects:
  - kind: ServiceAccount
    name: default-rolebindings-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:default-rolebindings-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:default-rolebindings-controller
  subjects:
  - kind: ServiceAccount
    name: default-rolebindings-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:openshift:controller:namespace-security-allocation-controller
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:openshift:controller:namespace-security-allocation-controller
  subjects:
  - kind: ServiceAccount
    name: namespace-security-allocation-controller
    namespace: openshift-infra
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-public
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - cluster-info
    resources:
    - configmaps
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: extension-apiserver-authentication-reader
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - extension-apiserver-authentication
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cloud-provider
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:token-cleaner
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-controller-manager
    resources:
    - configmaps
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-scheduler
    resources:
    - configmaps
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: shared-resource-viewer
    namespace: openshift
  rules:
  - apiGroups:
    - ""
    - template.openshift.io
    resources:
    - templates
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreamimages
    - imagestreams
    - imagestreamtags
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - image.openshift.io
    resources:
    - imagestreams/layers
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-config-reader
    namespace: openshift-node
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-public
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-controller-manager
  subjects:
  - kind: ServiceAccount
    name: kube-controller-manager
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-scheduler
  subjects:
  - kind: ServiceAccount
    name: kube-scheduler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cloud-provider
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:cloud-provider
  subjects:
  - kind: ServiceAccount
    name: cloud-provider
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:token-cleaner
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:token-cleaner
  subjects:
  - kind: ServiceAccount
    name: token-cleaner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: shared-resource-viewers
    namespace: openshift
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: shared-resource-viewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: null
    name: system:node-config-reader
    namespace: openshift-node
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:node-config-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
kind: List
metadata: {}
