$icon-font-path: "../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/";
// Variables must be imported before bootstrap to pick up our variable overrides
@import "_variables.scss";
// bower:scss
@import "bootstrap-sass-official/assets/stylesheets/_bootstrap.scss";
// endbower


@import "_mixins.scss";
@import "_fonts.scss";
@import "_iconfont.scss";
@import "_openshift-icon.scss";
@import "_base.scss";
@import "_type.scss";
@import "_core.scss";
@import "_navbar.scss";
@import "_footer.scss";
@import "_tile.scss";
@import "rcue/_navbar.scss";
@import "rcue/_navbar-branded.scss";



/* -------------------------------------------------------
 * TODO Pull these styles out, there are for the prototype
 */

.pod {
  padding: 10px;  
  border-radius: 20px;
  margin-bottom: 5px;
  margin-right: 5px;
  display: inline-block;  
  background-color: rgba(204, 204, 204, 0.15);
  border: 1px solid rgba(170, 170, 170, 0.15);

  &.pod-running {
    background-color: rgba(117, 198, 247, 0.15);
    border: 1px solid rgba(66, 147, 196, 0.15);
  }
}

.service {
  padding-left: 10px;
  background-color: rgba(204, 204, 204, 0.15);
  border: 1px solid rgba(170, 170, 170, 0.15);
  border-radius: 3px;
  margin-bottom: 20px;
  margin-top: 10px;
  position: relative;  
}

.pod-template {
  text-align: left;
  padding: 10px;
  border: solid 1px #ddd;
  display: inline-block;
  border-radius: 20px; 
  margin-bottom: 10px;

  .pod-template-container {
    display: inline-block;
    margin-top: 10px;
  }

  .pod-template-image {
    border: 1px dashed #ddd;
    border-radius: 20px;
    padding: 10px;
  }
}

.connector {
  position: absolute;

  &.connector-vertical {
    width: 7px;

    .connector-line {
      width: 1px;
      top: 0;
      left: 3px; 
    }

    .connector-endpoint-top {
      top: -3px;
    }
  }

  &.connector-horizontal {
    height: 7px;

    .connector-endpoint {
      top: -3px;
    }

    .connector-line {
      height: 1px;
    }
  }

  .connector-line {
    position: absolute;
    background-color: #ddd;
  }

  .connector-endpoint {
    position: absolute;
    width: 7px;
    height: 7px;
    border-radius: 50%;
    background-color: #ddd;
  }
}

.tile .separator {
  border-top: 1px solid #ddd;
  margin-left: -20px;
  margin-right: -20px;
}

.timestamp {
  cursor: help;
}

.flex-row {
  display: flex;
  display: --webkit-flex;
  flex-direction: row;
  -webkit-flex-direction: row;
}

.flex {
  flex: 1 1 auto;
}

@-webkit-keyframes clockwise {
  0% {
    -webkit-transform: rotate(0deg);
  }
  50% {
    -webkit-transform: rotate(180deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
  }
}
@keyframes clockwise {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@-webkit-keyframes counterclockwise {
  0% {
    -webkit-transform: rotate(0deg);
  }
  50% {
    -webkit-transform: rotate(-180deg);
  }
  100% {
    -webkit-transform: rotate(-360deg);
  }
}
@keyframes counterclockwise {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

.clockwise {
  -webkit-animation: clockwise 1.5s linear infinite;
  animation: clockwise 1.5s linear infinite;
}

.counterclockwise {
  -webkit-animation: counterclockwise 1.5s linear infinite;
   animation: counterclockwise 1.5s linear infinite;
}

.animate-repeat.ng-move,
.animate-repeat.ng-enter,
.animate-repeat.ng-leave {
  -webkit-transition:all 1s;
  transition:all 1s;
}

.animate-repeat.ng-leave.ng-leave-active,
.animate-repeat.ng-move,
.animate-repeat.ng-enter {
  opacity:0;
}

.animate-repeat.ng-leave,
.animate-repeat.ng-move.ng-move-active,
.animate-repeat.ng-enter.ng-enter-active {
  opacity:1;
}

/* Angular automatically animates things by creating
   transition periods between elements showing and hiding.
   In some cases we do not want to see both elements at the same time
   so we hide things in the ng-leave state that we have tagged with the
   additional hide-ng-leave class.
 */
.hide-ng-leave.ng-leave {
  display: none;
}

.hide-ng-leave .ng-leave {
  display: none;
}