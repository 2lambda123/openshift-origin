name: delete
synopsis: |
  Delete resources by filenames, stdin, resources and names, or by resources and label selector
description: "Delete resources by filenames, stdin, resources and names, or by resources
  and label selector. \n\nJSON and YAML formats are accepted. Only one type of the
  arguments may be specified: filenames, resources and names, or resources and label
  selector. \n\nSome resources, such as pods, support graceful deletion. These resources
  define a default period before they are forcibly terminated (the grace period) but
  you may override that value with the --grace-period flag, or pass --now to set a
  grace-period of 1. Because these resources often represent entities in the cluster,
  deletion may not be acknowledged immediately. If the node hosting a pod is down
  or cannot reach the API server, termination may take significantly longer than the
  grace period. To force delete a resource, you must pass a grace period of 0 and
  specify the --force flag. \n\nIMPORTANT: Force deleting pods does not wait for confirmation
  that the pod's processes have been terminated, which can leave those processes running
  until the node detects the deletion and completes graceful deletion. If your processes
  use shared storage or talk to a remote API and depend on the name of the pod to
  identify themselves, force deleting those pods may result in multiple processes
  running on different machines using the same identification which may lead to data
  corruption or inconsistency. Only force delete pods when you are sure the pod is
  terminated, or if your application can tolerate multiple copies of the same pod
  running at once. Also, if you force delete pods the scheduler may place new pods
  on those nodes before the node has released those resources and causing those pods
  to be evicted immediately. \n\nNote that the delete command does NOT do resource
  version checks, so if someone submits an update to a resource right when you submit
  a delete, their update will be lost along with the rest of the resource."
options:
- name: all
  default_value: "false"
  usage: |
    Delete all resources, including uninitialized ones, in the namespace of the specified resource types.
- name: cascade
  default_value: "true"
  usage: |
    If true, cascade the deletion of the resources managed by this resource (e.g. Pods created by a ReplicationController).  Default true.
- name: filename
  shorthand: f
  default_value: '[]'
  usage: |
    Filename, directory, or URL to files containing the resource to delete.
- name: force
  default_value: "false"
  usage: |
    Immediate deletion of some resources may result in inconsistency or data loss and requires confirmation.
- name: grace-period
  default_value: "-1"
  usage: |
    Period of time in seconds given to the resource to terminate gracefully. Ignored if negative.
- name: ignore-not-found
  default_value: "false"
  usage: |
    Treat "resource not found" as a successful delete. Defaults to "true" when --all is specified.
- name: include-extended-apis
  default_value: "true"
  usage: |
    If true, include definitions of new APIs via calls to the API server. [default true]
- name: include-uninitialized
  default_value: "false"
  usage: |
    If true, the kubectl command applies to uninitialized objects. If explicitly set to false, this flag overrides other flags that make the kubectl commands apply to uninitialized objects, e.g., "--all". Objects with empty metadata.initializers are regarded as initialized.
- name: now
  default_value: "false"
  usage: |
    If true, resources are signaled for immediate shutdown (same as --grace-period=1).
- name: output
  shorthand: o
  usage: |
    Output mode. Use "-o name" for shorter output (resource/name).
- name: recursive
  shorthand: R
  default_value: "false"
  usage: |
    Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
- name: selector
  shorthand: l
  usage: |
    Selector (label query) to filter on, not including uninitialized ones.
- name: timeout
  default_value: 0s
  usage: |
    The length of time to wait before giving up on a delete, zero means determine a timeout from the size of the object
inherited_options:
- name: alsologtostderr
  default_value: "false"
  usage: log to standard error as well as files
- name: as
  usage: Username to impersonate for the operation
- name: as-group
  default_value: '[]'
  usage: |
    Group to impersonate for the operation, this flag can be repeated to specify multiple groups.
- name: cache-dir
  default_value: /home/username/.kube/http-cache
  usage: Default HTTP cache directory
- name: certificate-authority
  usage: Path to a cert file for the certificate authority
- name: client-certificate
  usage: Path to a client certificate file for TLS
- name: client-key
  usage: Path to a client key file for TLS
- name: cluster
  usage: The name of the kubeconfig cluster to use
- name: context
  usage: The name of the kubeconfig context to use
- name: insecure-skip-tls-verify
  default_value: "false"
  usage: |
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure
- name: kubeconfig
  usage: Path to the kubeconfig file to use for CLI requests.
- name: log-backtrace-at
  default_value: :0
  usage: when logging hits line file:N, emit a stack trace
- name: log-dir
  usage: If non-empty, write log files in this directory
- name: logtostderr
  default_value: "false"
  usage: log to standard error instead of files
- name: match-server-version
  default_value: "false"
  usage: Require server version to match client version
- name: namespace
  shorthand: "n"
  usage: If present, the namespace scope for this CLI request
- name: password
  usage: Password for basic authentication to the API server
- name: request-timeout
  default_value: "0"
  usage: |
    The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.
- name: server
  shorthand: s
  usage: The address and port of the Kubernetes API server
- name: stderrthreshold
  default_value: "2"
  usage: logs at or above this threshold go to stderr
- name: token
  usage: Bearer token for authentication to the API server
- name: user
  usage: The name of the kubeconfig user to use
- name: username
  usage: Username for basic authentication to the API server
- name: v
  shorthand: v
  default_value: "0"
  usage: log level for V logs
- name: vmodule
  usage: |
    comma-separated list of pattern=N settings for file-filtered logging
example: "  # Delete a pod using the type and name specified in pod.json.\n  kubectl
  delete -f ./pod.json\n  \n  # Delete a pod based on the type and name in the JSON
  passed into stdin.\n  cat pod.json | kubectl delete -f -\n  \n  # Delete pods and
  services with same names \"baz\" and \"foo\"\n  kubectl delete pod,service baz foo\n
  \ \n  # Delete pods and services with label name=myLabel.\n  kubectl delete pods,services
  -l name=myLabel\n  \n  # Delete a pod with minimal delay\n  kubectl delete pod foo
  --now\n  \n  # Force delete a pod on a dead node\n  kubectl delete pod foo --grace-period=0
  --force\n  \n  # Delete all pods\n  kubectl delete pods --all"
see_also:
- kubectl
