// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/openshift/origin/pkg/cmd/openshift-operators/apiserver-operator/apis/apiserver/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OpenShiftAPIServerConfigLister helps list OpenShiftAPIServerConfigs.
type OpenShiftAPIServerConfigLister interface {
	// List lists all OpenShiftAPIServerConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1.OpenShiftAPIServerConfig, err error)
	// Get retrieves the OpenShiftAPIServerConfig from the index for a given name.
	Get(name string) (*v1.OpenShiftAPIServerConfig, error)
	OpenShiftAPIServerConfigListerExpansion
}

// openShiftAPIServerConfigLister implements the OpenShiftAPIServerConfigLister interface.
type openShiftAPIServerConfigLister struct {
	indexer cache.Indexer
}

// NewOpenShiftAPIServerConfigLister returns a new OpenShiftAPIServerConfigLister.
func NewOpenShiftAPIServerConfigLister(indexer cache.Indexer) OpenShiftAPIServerConfigLister {
	return &openShiftAPIServerConfigLister{indexer: indexer}
}

// List lists all OpenShiftAPIServerConfigs in the indexer.
func (s *openShiftAPIServerConfigLister) List(selector labels.Selector) (ret []*v1.OpenShiftAPIServerConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.OpenShiftAPIServerConfig))
	})
	return ret, err
}

// Get retrieves the OpenShiftAPIServerConfig from the index for a given name.
func (s *openShiftAPIServerConfigLister) Get(name string) (*v1.OpenShiftAPIServerConfig, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("openshiftapiserverconfig"), name)
	}
	return obj.(*v1.OpenShiftAPIServerConfig), nil
}
