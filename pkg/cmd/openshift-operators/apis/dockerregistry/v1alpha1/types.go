package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	registryv1 "github.com/openshift/api/dockerregistry/v1"
	operatorsv1alpha1api "github.com/openshift/api/operator/v1alpha1"
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type OpenShiftDockerRegistryConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`

	Items []OpenShiftDockerRegistryConfig `json:"items"`
}

// +genclient
// +genclient:nonNamespaced
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type OpenShiftDockerRegistryConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata"`

	Spec   OpenShiftDockerRegistryConfigSpec   `json:"spec"`
	Status OpenShiftDockerRegistryConfigStatus `json:"status"`
}

type OpenShiftDockerRegistryConfigSpec struct {
	operatorsv1alpha1api.OperatorSpec `json:",inline"`

	// config holds a sparse config that the user wants for this component. It only needs to be the overrides
	// from the defaults it will end up overlaying in the following order:
	// 1. hardcoded default
	// 2. this config
	RegistryConfig registryv1.DockerRegistryConfiguration `json:"config"`

	// TODO should be automatic
	NodeSelector map[string]string `json:"nodeSelector"`

	// TODO should be automatic
	Replicas int32 `json:"replicas"`
}

type OpenShiftDockerRegistryConfigStatus struct {
	operatorsv1alpha1api.OperatorStatus `json:",inline"`

	// Must be passed as an environment variable to all registry instances. Shall be generated by the operator
	// as early as possible and shall not be changed.
	HttpSecret string `json:"httpSecret,omitempty"`
}
