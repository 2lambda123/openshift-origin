package v1

// This file contains methods that can be used by the go-restful package to generate Swagger
// documentation for the object types found in 'types.go' This file is automatically generated
// by hack/update-generated-swagger-descriptions.sh and should be run after a full build of OpenShift.
// ==== DO NOT EDIT THIS FILE MANUALLY ====

var map_ClusterResourceQuota = map[string]string{
	"":         "ClusterResourceQuota mirrors ResourceQuota at a cluster scope.  This object is easily convertible to synthetic ResourceQuota object to allow quota evaluation re-use.",
	"metadata": "Standard object's metadata.",
	"spec":     "Spec defines the desired quota",
	"status":   "Status defines the actual enforced quota and its current usage",
}

func (ClusterResourceQuota) SwaggerDoc() map[string]string {
	return map_ClusterResourceQuota
}

var map_ClusterResourceQuotaList = map[string]string{
	"":         "ClusterResourceQuotaList is a collection of ClusterResourceQuotas",
	"metadata": "Standard object's metadata.",
	"items":    "Items is a list of ClusterResourceQuotas",
}

func (ClusterResourceQuotaList) SwaggerDoc() map[string]string {
	return map_ClusterResourceQuotaList
}

var map_ClusterResourceQuotaSpec = map[string]string{
	"":         "ClusterResourceQuotaSpec defines the desired quota restrictions",
	"selector": "Selector is the label selector used to match projects.  It is not allowed to be empty and should only select active projects on the scale of dozens (though it can select many more less active projects).  These projects will contend on object creation through this resource.",
	"quota":    "Quota defines the desired quota",
}

func (ClusterResourceQuotaSpec) SwaggerDoc() map[string]string {
	return map_ClusterResourceQuotaSpec
}

var map_ClusterResourceQuotaStatus = map[string]string{
	"":           "ClusterResourceQuotaStatus defines the actual enforced quota and its current usage",
	"total":      "Total defines the actual enforced quota and its current usage across all namespaces",
	"namespaces": "Namespaces slices the usage by namespace.  This division allows for quick resolution of deletion reconcilation inside of a single namespace without requiring a recalculation across all namespaces.  This can be used to pull the deltas for a given namespace.",
}

func (ClusterResourceQuotaStatus) SwaggerDoc() map[string]string {
	return map_ClusterResourceQuotaStatus
}

var map_ResourceQuotaStatusByNamespace = map[string]string{
	"":          "ResourceQuotaStatusByNamespace gives status for a particular namespace",
	"namespace": "Namespace the namespace this status applies to",
	"status":    "Status indicates how many resources have been consumed by this namespace",
}

func (ResourceQuotaStatusByNamespace) SwaggerDoc() map[string]string {
	return map_ResourceQuotaStatusByNamespace
}
