#!/bin/bash
set -ex

lock_file=/var/lock/openshift-sdn.lock

action=$1
pod_namespace=$2
pod_name=$3
net_container=$4

lockwrap() {
    (
    flock 200
    "$@"
    ) 200>${lock_file}
}

# Retrieve the name of the host-local member of the veth pair that
# connects the container (identified by pid) to the docker bridge.
get_veth_host() {
    local pid=$1

    local veth_ifindex=$(nsenter -n -t $pid -- ethtool -S eth0 | sed -n -e 's/.*peer_ifindex: //p')
    # Strip a suffix starting with '@' from the interface name.
    # The suffixed interface name won't be recognized by brctl or ovs-*
    ip link show | sed -ne "s/^$veth_ifindex: \([^:@]*\).*/\1/p"
}

Init() {
    true
}

Setup() {
    source /etc/openshift-sdn/config.env
    cluster_subnet=${OPENSHIFT_CLUSTER_SUBNET}
    tap_ip=${OPENSHIFT_SDN_TAP1_ADDR}

    pid=$(docker inspect --format "{{.State.Pid}}" ${net_container})
    network_mode=$(docker inspect --format "{{.HostConfig.NetworkMode}}" ${net_container})
    if [ "${network_mode}" == "host" ]; then
      # quit, nothing for the SDN here
      exit 0
    fi
    ipaddr=$(docker inspect --format "{{.NetworkSettings.IPAddress}}" ${net_container})
    new_ip=$ipaddr
    ipaddr_sub=$(docker inspect --format "{{.NetworkSettings.IPPrefixLen}}" ${net_container})
    docker_gateway=$(docker inspect --format "{{.NetworkSettings.Gateway}}" ${net_container})
    veth_host=$(get_veth_host $pid)

    brctl delif lbr0 $veth_host
    ovs-vsctl add-port br0 ${veth_host} 
    ovs_port=$(ovs-ofctl -O OpenFlow13 dump-ports-desc br0  | grep ${veth_host} | cut -d "(" -f 1 | tr -d ' ')
    ovs-ofctl -O OpenFlow13 add-flow br0 "table=0,cookie=0x${ovs_port},priority=100,ip,nw_dst=${new_ip},actions=output:${ovs_port}"
    ovs-ofctl -O OpenFlow13 add-flow br0 "table=0,cookie=0x${ovs_port},priority=100,arp,nw_dst=${new_ip},actions=output:${ovs_port}"

    add_subnet_route="ip route add ${cluster_subnet} dev eth0 proto kernel scope link src $ipaddr"
    nsenter -n -t $pid -- $add_subnet_route
}

Teardown() {
    source /etc/openshift-sdn/config.env
    cluster_subnet=${OPENSHIFT_CLUSTER_SUBNET}
    tap_ip=${OPENSHIFT_SDN_TAP1_ADDR}

    pid=$(docker inspect --format "{{.State.Pid}}" ${net_container})
    network_mode=$(docker inspect --format "{{.HostConfig.NetworkMode}}" ${net_container})
    if [ "${network_mode}" == "host" ]; then
      # quit, nothing for the SDN here
      exit 0
    fi
    veth_host=$(get_veth_host $pid)
    ovs_port=$(ovs-ofctl -O OpenFlow13 dump-ports-desc br0  | grep ${veth_host} | cut -d "(" -f 1 | tr -d ' ')
    ovs-vsctl del-port $veth_host
    ovs-ofctl -O OpenFlow13 del-flows br0 "table=0,cookie=0x${ovs_port}/0xffffffff"
}

case "$action" in
    init)
	lockwrap Init
	;;
    setup)
	lockwrap Setup
	;;
    teardown)
	lockwrap Teardown
	;;
    *)
        echo "Bad input: $@"
        exit 1
esac

