

__kubectl_bash_source() {
	alias shopt=':'
	alias _expand=_bash_expand
	alias _complete=_bash_comp
	emulate -L sh
	setopt kshglob noshglob braceexpand

	source "$@"
}

__kubectl_type() {
	# -t is not supported by zsh
	if [ "$1" == "-t" ]; then
		shift

		# fake Bash 4 to disable "complete -o nospace". Instead
		# "compopt +-o nospace" is used in the code to toggle trailing
		# spaces. We don't support that, but leave trailing spaces on
		# all the time
		if [ "$1" = "__kubectl_compopt" ]; then
			echo builtin
			return 0
		fi
	fi
	type "$@"
}

__kubectl_compgen() {
	local completions w
	completions=( $(compgen "$@") ) || return $?

	# filter by given word as prefix
	while [[ "$1" = -* && "$1" != -- ]]; do
		shift
		shift
	done
	if [[ "$1" == -- ]]; then
		shift
	fi
	for w in "${completions[@]}"; do
		if [[ "${w}" = "$1"* ]]; then
			echo "${w}"
		fi
	done
}

__kubectl_compopt() {
	true # don't do anything. Not supported by bashcompinit in zsh
}

__kubectl_declare() {
	if [ "$1" == "-F" ]; then
		whence -w "$@"
	else
		builtin declare "$@"
	fi
}

__kubectl_ltrim_colon_completions()
{
	if [[ "$1" == *:* && "$COMP_WORDBREAKS" == *:* ]]; then
		# Remove colon-word prefix from COMPREPLY items
		local colon_word=${1%${1##*:}}
		local i=${#COMPREPLY[*]}
		while [[ $((--i)) -ge 0 ]]; do
			COMPREPLY[$i]=${COMPREPLY[$i]#"$colon_word"}
		done
	fi
}

__kubectl_get_comp_words_by_ref() {
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[${COMP_CWORD}-1]}"
	words=("${COMP_WORDS[@]}")
	cword=("${COMP_CWORD[@]}")
}

__kubectl_filedir() {
	local RET OLD_IFS w qw

	__debug "_filedir $@ cur=$cur"
	if [[ "$1" = \~* ]]; then
		# somehow does not work. Maybe, zsh does not call this at all
		eval echo "$1"
		return 0
	fi

	OLD_IFS="$IFS"
	IFS=$'\n'
	if [ "$1" = "-d" ]; then
		shift
		RET=( $(compgen -d) )
	else
		RET=( $(compgen -f) )
	fi
	IFS="$OLD_IFS"

	IFS="," __debug "RET=${RET[@]} len=${#RET[@]}"

	for w in ${RET[@]}; do
		if [[ ! "${w}" = "${cur}"* ]]; then
			continue
		fi
		if eval "[[ \"\${w}\" = *.$1 || -d \"\${w}\" ]]"; then
			qw="$(__kubectl_quote "${w}")"
			if [ -d "${w}" ]; then
				COMPREPLY+=("${qw}/")
			else
				COMPREPLY+=("${qw}")
			fi
		fi
	done
}

__kubectl_quote() {
    if [[ $1 == \'* || $1 == \"* ]]; then
        # Leave out first character
        printf %q "${1:1}"
    else
    	printf %q "$1"
    fi
}

autoload -U +X bashcompinit && bashcompinit

# use word boundary patterns for BSD or GNU sed
LWORD='[[:<:]]'
RWORD='[[:>:]]'
if sed --help 2>&1 | grep -q GNU; then
	LWORD='\<'
	RWORD='\>'
fi

__kubectl_convert_bash_to_zsh() {
	sed \
	-e 's/declare -F/whence -w/' \
	-e 's/_get_comp_words_by_ref "\$@"/_get_comp_words_by_ref "\$*"/' \
	-e 's/local \([a-zA-Z0-9_]*\)=/local \1; \1=/' \
	-e 's/flags+=("\(--.*\)=")/flags+=("\1"); two_word_flags+=("\1")/' \
	-e 's/must_have_one_flag+=("\(--.*\)=")/must_have_one_flag+=("\1")/' \
	-e "s/${LWORD}_filedir${RWORD}/__kubectl_filedir/g" \
	-e "s/${LWORD}_get_comp_words_by_ref${RWORD}/__kubectl_get_comp_words_by_ref/g" \
	-e "s/${LWORD}__ltrim_colon_completions${RWORD}/__kubectl_ltrim_colon_completions/g" \
	-e "s/${LWORD}compgen${RWORD}/__kubectl_compgen/g" \
	-e "s/${LWORD}compopt${RWORD}/__kubectl_compopt/g" \
	-e "s/${LWORD}declare${RWORD}/__kubectl_declare/g" \
	-e "s/\\\$(type${RWORD}/\$(__kubectl_type/g" \
	<<'BASH_COMPLETION_EOF'
# bash completion for openshift                            -*- shell-script -*-

__debug()
{
    if [[ -n ${BASH_COMP_DEBUG_FILE} ]]; then
        echo "$*" >> "${BASH_COMP_DEBUG_FILE}"
    fi
}

# Homebrew on Macs have version 1.3 of bash-completion which doesn't include
# _init_completion. This is a very minimal version of that function.
__my_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

__index_of_word()
{
    local w word=$1
    shift
    index=0
    for w in "$@"; do
        [[ $w = "$word" ]] && return
        index=$((index+1))
    done
    index=-1
}

__contains_word()
{
    local w word=$1; shift
    for w in "$@"; do
        [[ $w = "$word" ]] && return
    done
    return 1
}

__handle_reply()
{
    __debug "${FUNCNAME[0]}"
    case $cur in
        -*)
            if [[ $(type -t compopt) = "builtin" ]]; then
                compopt -o nospace
            fi
            local allflags
            if [ ${#must_have_one_flag[@]} -ne 0 ]; then
                allflags=("${must_have_one_flag[@]}")
            else
                allflags=("${flags[*]} ${two_word_flags[*]}")
            fi
            COMPREPLY=( $(compgen -W "${allflags[*]}" -- "$cur") )
            if [[ $(type -t compopt) = "builtin" ]]; then
                [[ "${COMPREPLY[0]}" == *= ]] || compopt +o nospace
            fi

            # complete after --flag=abc
            if [[ $cur == *=* ]]; then
                if [[ $(type -t compopt) = "builtin" ]]; then
                    compopt +o nospace
                fi

                local index flag
                flag="${cur%%=*}"
                __index_of_word "${flag}" "${flags_with_completion[@]}"
                if [[ ${index} -ge 0 ]]; then
                    COMPREPLY=()
                    PREFIX=""
                    cur="${cur#*=}"
                    ${flags_completion[${index}]}
                    if [ -n "${ZSH_VERSION}" ]; then
                        # zfs completion needs --flag= prefix
                        eval "COMPREPLY=( \"\${COMPREPLY[@]/#/${flag}=}\" )"
                    fi
                fi
            fi
            return 0;
            ;;
    esac

    # check if we are handling a flag with special work handling
    local index
    __index_of_word "${prev}" "${flags_with_completion[@]}"
    if [[ ${index} -ge 0 ]]; then
        ${flags_completion[${index}]}
        return
    fi

    # we are parsing a flag and don't have a special handler, no completion
    if [[ ${cur} != "${words[cword]}" ]]; then
        return
    fi

    local completions
    completions=("${commands[@]}")
    if [[ ${#must_have_one_noun[@]} -ne 0 ]]; then
        completions=("${must_have_one_noun[@]}")
    fi
    if [[ ${#must_have_one_flag[@]} -ne 0 ]]; then
        completions+=("${must_have_one_flag[@]}")
    fi
    COMPREPLY=( $(compgen -W "${completions[*]}" -- "$cur") )

    if [[ ${#COMPREPLY[@]} -eq 0 && ${#noun_aliases[@]} -gt 0 && ${#must_have_one_noun[@]} -ne 0 ]]; then
        COMPREPLY=( $(compgen -W "${noun_aliases[*]}" -- "$cur") )
    fi

    if [[ ${#COMPREPLY[@]} -eq 0 ]]; then
        declare -F __custom_func >/dev/null && __custom_func
    fi

    __ltrim_colon_completions "$cur"
}

# The arguments should be in the form "ext1|ext2|extn"
__handle_filename_extension_flag()
{
    local ext="$1"
    _filedir "@(${ext})"
}

__handle_subdirs_in_dir_flag()
{
    local dir="$1"
    pushd "${dir}" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1
}

__handle_flag()
{
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    # if a command required a flag, and we found it, unset must_have_one_flag()
    local flagname=${words[c]}
    local flagvalue
    # if the word contained an =
    if [[ ${words[c]} == *"="* ]]; then
        flagvalue=${flagname#*=} # take in as flagvalue after the =
        flagname=${flagname%%=*} # strip everything after the =
        flagname="${flagname}=" # but put the = back
    fi
    __debug "${FUNCNAME[0]}: looking for ${flagname}"
    if __contains_word "${flagname}" "${must_have_one_flag[@]}"; then
        must_have_one_flag=()
    fi

    # if you set a flag which only applies to this command, don't show subcommands
    if __contains_word "${flagname}" "${local_nonpersistent_flags[@]}"; then
      commands=()
    fi

    # keep flag value with flagname as flaghash
    if [ -n "${flagvalue}" ] ; then
        flaghash[${flagname}]=${flagvalue}
    elif [ -n "${words[ $((c+1)) ]}" ] ; then
        flaghash[${flagname}]=${words[ $((c+1)) ]}
    else
        flaghash[${flagname}]="true" # pad "true" for bool flag
    fi

    # skip the argument to a two word flag
    if __contains_word "${words[c]}" "${two_word_flags[@]}"; then
        c=$((c+1))
        # if we are looking for a flags value, don't show commands
        if [[ $c -eq $cword ]]; then
            commands=()
        fi
    fi

    c=$((c+1))

}

__handle_noun()
{
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    if __contains_word "${words[c]}" "${must_have_one_noun[@]}"; then
        must_have_one_noun=()
    elif __contains_word "${words[c]}" "${noun_aliases[@]}"; then
        must_have_one_noun=()
    fi

    nouns+=("${words[c]}")
    c=$((c+1))
}

__handle_command()
{
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    local next_command
    if [[ -n ${last_command} ]]; then
        next_command="_${last_command}_${words[c]//:/__}"
    else
        if [[ $c -eq 0 ]]; then
            next_command="_$(basename "${words[c]//:/__}")"
        else
            next_command="_${words[c]//:/__}"
        fi
    fi
    c=$((c+1))
    __debug "${FUNCNAME[0]}: looking for ${next_command}"
    declare -F $next_command >/dev/null && $next_command
}

__handle_word()
{
    if [[ $c -ge $cword ]]; then
        __handle_reply
        return
    fi
    __debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"
    if [[ "${words[c]}" == -* ]]; then
        __handle_flag
    elif __contains_word "${words[c]}" "${commands[@]}"; then
        __handle_command
    elif [[ $c -eq 0 ]] && __contains_word "$(basename "${words[c]}")" "${commands[@]}"; then
        __handle_command
    else
        __handle_noun
    fi
    __handle_word
}

_openshift_admin()
{
    last_command="openshift_admin"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_cli()
{
    last_command="openshift_cli"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_completion()
{
    last_command="openshift_completion"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    must_have_one_noun+=("bash")
    must_have_one_noun+=("zsh")
    noun_aliases=()
}

_openshift_ex_build-chain()
{
    last_command="openshift_ex_build-chain"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--all")
    local_nonpersistent_flags+=("--all")
    flags+=("--output=")
    two_word_flags+=("-o")
    local_nonpersistent_flags+=("--output=")
    flags+=("--reverse")
    local_nonpersistent_flags+=("--reverse")
    flags+=("--trigger-only")
    local_nonpersistent_flags+=("--trigger-only")
    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex_config_patch()
{
    last_command="openshift_ex_config_patch"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--patch=")
    two_word_flags+=("-p")
    local_nonpersistent_flags+=("--patch=")
    flags+=("--type=")
    local_nonpersistent_flags+=("--type=")
    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_flag+=("--patch=")
    must_have_one_flag+=("-p")
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex_config()
{
    last_command="openshift_ex_config"
    commands=()
    commands+=("patch")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex_ipfailover()
{
    last_command="openshift_ex_ipfailover"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--check-interval=")
    local_nonpersistent_flags+=("--check-interval=")
    flags+=("--check-script=")
    local_nonpersistent_flags+=("--check-script=")
    flags+=("--create")
    local_nonpersistent_flags+=("--create")
    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--images=")
    local_nonpersistent_flags+=("--images=")
    flags+=("--interface=")
    two_word_flags+=("-i")
    local_nonpersistent_flags+=("--interface=")
    flags+=("--iptables-chain=")
    local_nonpersistent_flags+=("--iptables-chain=")
    flags+=("--latest-images")
    local_nonpersistent_flags+=("--latest-images")
    flags+=("--notify-script=")
    local_nonpersistent_flags+=("--notify-script=")
    flags+=("--output=")
    two_word_flags+=("-o")
    local_nonpersistent_flags+=("--output=")
    flags+=("--output-version=")
    local_nonpersistent_flags+=("--output-version=")
    flags+=("--preemption-strategy=")
    local_nonpersistent_flags+=("--preemption-strategy=")
    flags+=("--replicas=")
    two_word_flags+=("-r")
    local_nonpersistent_flags+=("--replicas=")
    flags+=("--selector=")
    two_word_flags+=("-l")
    local_nonpersistent_flags+=("--selector=")
    flags+=("--service-account=")
    local_nonpersistent_flags+=("--service-account=")
    flags+=("--show-all")
    flags+=("-a")
    local_nonpersistent_flags+=("--show-all")
    flags+=("--show-labels")
    local_nonpersistent_flags+=("--show-labels")
    flags+=("--sort-by=")
    local_nonpersistent_flags+=("--sort-by=")
    flags+=("--template=")
    flags_with_completion+=("--template")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--template=")
    flags+=("--type=")
    local_nonpersistent_flags+=("--type=")
    flags+=("--virtual-ips=")
    local_nonpersistent_flags+=("--virtual-ips=")
    flags+=("--vrrp-id-offset=")
    local_nonpersistent_flags+=("--vrrp-id-offset=")
    flags+=("--watch-port=")
    two_word_flags+=("-w")
    local_nonpersistent_flags+=("--watch-port=")
    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex_options()
{
    last_command="openshift_ex_options"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex_prune-groups()
{
    last_command="openshift_ex_prune-groups"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--blacklist=")
    flags_with_completion+=("--blacklist")
    flags_completion+=("__handle_filename_extension_flag txt")
    local_nonpersistent_flags+=("--blacklist=")
    flags+=("--confirm")
    local_nonpersistent_flags+=("--confirm")
    flags+=("--sync-config=")
    flags_with_completion+=("--sync-config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--sync-config=")
    flags+=("--whitelist=")
    flags_with_completion+=("--whitelist")
    flags_completion+=("__handle_filename_extension_flag txt")
    local_nonpersistent_flags+=("--whitelist=")
    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex_sync-groups()
{
    last_command="openshift_ex_sync-groups"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--allow-missing-template-keys")
    local_nonpersistent_flags+=("--allow-missing-template-keys")
    flags+=("--blacklist=")
    flags_with_completion+=("--blacklist")
    flags_completion+=("__handle_filename_extension_flag txt")
    local_nonpersistent_flags+=("--blacklist=")
    flags+=("--confirm")
    local_nonpersistent_flags+=("--confirm")
    flags+=("--no-headers")
    local_nonpersistent_flags+=("--no-headers")
    flags+=("--output=")
    two_word_flags+=("-o")
    local_nonpersistent_flags+=("--output=")
    flags+=("--show-all")
    flags+=("-a")
    local_nonpersistent_flags+=("--show-all")
    flags+=("--show-labels")
    local_nonpersistent_flags+=("--show-labels")
    flags+=("--sort-by=")
    local_nonpersistent_flags+=("--sort-by=")
    flags+=("--sync-config=")
    flags_with_completion+=("--sync-config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--sync-config=")
    flags+=("--template=")
    flags_with_completion+=("--template")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--template=")
    flags+=("--type=")
    local_nonpersistent_flags+=("--type=")
    flags+=("--whitelist=")
    flags_with_completion+=("--whitelist")
    flags_completion+=("__handle_filename_extension_flag txt")
    local_nonpersistent_flags+=("--whitelist=")
    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--loglevel=")
    flags+=("--logspec=")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_ex()
{
    last_command="openshift_ex"
    commands=()
    commands+=("build-chain")
    commands+=("config")
    commands+=("ipfailover")
    commands+=("options")
    commands+=("prune-groups")
    commands+=("sync-groups")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--as=")
    flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    flags+=("--context=")
    flags+=("--insecure-skip-tls-verify")
    flags+=("--match-server-version")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    flags+=("--request-timeout=")
    flags+=("--server=")
    flags+=("--token=")
    flags+=("--user=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_deploy_version()
{
    last_command="openshift_infra_deploy_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_deploy()
{
    last_command="openshift_infra_deploy"
    commands=()
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--deployment=")
    local_nonpersistent_flags+=("--deployment=")
    flags+=("--namespace=")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--until=")
    local_nonpersistent_flags+=("--until=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_diagnostic-pod()
{
    last_command="openshift_infra_diagnostic-pod"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--diaglevel=")
    two_word_flags+=("-l")
    local_nonpersistent_flags+=("--diaglevel=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_docker-build_version()
{
    last_command="openshift_infra_docker-build_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_docker-build()
{
    last_command="openshift_infra_docker-build"
    commands=()
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_f5-router_version()
{
    last_command="openshift_infra_f5-router_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_f5-router()
{
    last_command="openshift_infra_f5-router"
    commands=()
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--allow-wildcard-routes")
    local_nonpersistent_flags+=("--allow-wildcard-routes")
    flags+=("--allowed-domains=")
    local_nonpersistent_flags+=("--allowed-domains=")
    flags+=("--as=")
    local_nonpersistent_flags+=("--as=")
    flags+=("--as-group=")
    local_nonpersistent_flags+=("--as-group=")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--certificate-authority=")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--client-certificate=")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--client-key=")
    flags+=("--cluster=")
    local_nonpersistent_flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--config=")
    flags+=("--context=")
    local_nonpersistent_flags+=("--context=")
    flags+=("--denied-domains=")
    local_nonpersistent_flags+=("--denied-domains=")
    flags+=("--disable-namespace-ownership-check")
    local_nonpersistent_flags+=("--disable-namespace-ownership-check")
    flags+=("--enable-ingress")
    local_nonpersistent_flags+=("--enable-ingress")
    flags+=("--f5-host=")
    local_nonpersistent_flags+=("--f5-host=")
    flags+=("--f5-http-vserver=")
    local_nonpersistent_flags+=("--f5-http-vserver=")
    flags+=("--f5-https-vserver=")
    local_nonpersistent_flags+=("--f5-https-vserver=")
    flags+=("--f5-insecure")
    local_nonpersistent_flags+=("--f5-insecure")
    flags+=("--f5-internal-address=")
    local_nonpersistent_flags+=("--f5-internal-address=")
    flags+=("--f5-partition-path=")
    local_nonpersistent_flags+=("--f5-partition-path=")
    flags+=("--f5-password=")
    local_nonpersistent_flags+=("--f5-password=")
    flags+=("--f5-private-key=")
    local_nonpersistent_flags+=("--f5-private-key=")
    flags+=("--f5-username=")
    local_nonpersistent_flags+=("--f5-username=")
    flags+=("--f5-vxlan-gateway-cidr=")
    local_nonpersistent_flags+=("--f5-vxlan-gateway-cidr=")
    flags+=("--fields=")
    local_nonpersistent_flags+=("--fields=")
    flags+=("--hostname-template=")
    local_nonpersistent_flags+=("--hostname-template=")
    flags+=("--include-udp-endpoints")
    local_nonpersistent_flags+=("--include-udp-endpoints")
    flags+=("--insecure-skip-tls-verify")
    local_nonpersistent_flags+=("--insecure-skip-tls-verify")
    flags+=("--kubernetes=")
    local_nonpersistent_flags+=("--kubernetes=")
    flags+=("--labels=")
    local_nonpersistent_flags+=("--labels=")
    flags+=("--listen-addr=")
    local_nonpersistent_flags+=("--listen-addr=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--name=")
    local_nonpersistent_flags+=("--name=")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--namespace-labels=")
    local_nonpersistent_flags+=("--namespace-labels=")
    flags+=("--override-hostname")
    local_nonpersistent_flags+=("--override-hostname")
    flags+=("--project-labels=")
    local_nonpersistent_flags+=("--project-labels=")
    flags+=("--request-timeout=")
    local_nonpersistent_flags+=("--request-timeout=")
    flags+=("--resync-interval=")
    local_nonpersistent_flags+=("--resync-interval=")
    flags+=("--server=")
    local_nonpersistent_flags+=("--server=")
    flags+=("--token=")
    local_nonpersistent_flags+=("--token=")
    flags+=("--user=")
    local_nonpersistent_flags+=("--user=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_network-diagnostic-pod()
{
    last_command="openshift_infra_network-diagnostic-pod"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--diaglevel=")
    two_word_flags+=("-l")
    local_nonpersistent_flags+=("--diaglevel=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_recycle()
{
    last_command="openshift_infra_recycle"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_router_version()
{
    last_command="openshift_infra_router_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_router()
{
    last_command="openshift_infra_router"
    commands=()
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--allow-wildcard-routes")
    local_nonpersistent_flags+=("--allow-wildcard-routes")
    flags+=("--allowed-domains=")
    local_nonpersistent_flags+=("--allowed-domains=")
    flags+=("--as=")
    local_nonpersistent_flags+=("--as=")
    flags+=("--as-group=")
    local_nonpersistent_flags+=("--as-group=")
    flags+=("--bind-ports-after-sync")
    local_nonpersistent_flags+=("--bind-ports-after-sync")
    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--certificate-authority=")
    flags+=("--ciphers=")
    local_nonpersistent_flags+=("--ciphers=")
    flags+=("--client-certificate=")
    flags_with_completion+=("--client-certificate")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--client-certificate=")
    flags+=("--client-key=")
    flags_with_completion+=("--client-key")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--client-key=")
    flags+=("--cluster=")
    local_nonpersistent_flags+=("--cluster=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--config=")
    flags+=("--context=")
    local_nonpersistent_flags+=("--context=")
    flags+=("--default-certificate=")
    local_nonpersistent_flags+=("--default-certificate=")
    flags+=("--default-certificate-dir=")
    local_nonpersistent_flags+=("--default-certificate-dir=")
    flags+=("--default-certificate-path=")
    local_nonpersistent_flags+=("--default-certificate-path=")
    flags+=("--default-destination-ca-path=")
    local_nonpersistent_flags+=("--default-destination-ca-path=")
    flags+=("--denied-domains=")
    local_nonpersistent_flags+=("--denied-domains=")
    flags+=("--disable-namespace-ownership-check")
    local_nonpersistent_flags+=("--disable-namespace-ownership-check")
    flags+=("--enable-ingress")
    local_nonpersistent_flags+=("--enable-ingress")
    flags+=("--extended-validation")
    local_nonpersistent_flags+=("--extended-validation")
    flags+=("--fields=")
    local_nonpersistent_flags+=("--fields=")
    flags+=("--hostname-template=")
    local_nonpersistent_flags+=("--hostname-template=")
    flags+=("--include-udp-endpoints")
    local_nonpersistent_flags+=("--include-udp-endpoints")
    flags+=("--insecure-skip-tls-verify")
    local_nonpersistent_flags+=("--insecure-skip-tls-verify")
    flags+=("--interval=")
    local_nonpersistent_flags+=("--interval=")
    flags+=("--kubernetes=")
    local_nonpersistent_flags+=("--kubernetes=")
    flags+=("--labels=")
    local_nonpersistent_flags+=("--labels=")
    flags+=("--listen-addr=")
    local_nonpersistent_flags+=("--listen-addr=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--max-connections=")
    local_nonpersistent_flags+=("--max-connections=")
    flags+=("--metrics-type=")
    local_nonpersistent_flags+=("--metrics-type=")
    flags+=("--name=")
    local_nonpersistent_flags+=("--name=")
    flags+=("--namespace=")
    two_word_flags+=("-n")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--namespace-labels=")
    local_nonpersistent_flags+=("--namespace-labels=")
    flags+=("--override-hostname")
    local_nonpersistent_flags+=("--override-hostname")
    flags+=("--project-labels=")
    local_nonpersistent_flags+=("--project-labels=")
    flags+=("--reload=")
    local_nonpersistent_flags+=("--reload=")
    flags+=("--request-timeout=")
    local_nonpersistent_flags+=("--request-timeout=")
    flags+=("--resync-interval=")
    local_nonpersistent_flags+=("--resync-interval=")
    flags+=("--router-canonical-hostname=")
    local_nonpersistent_flags+=("--router-canonical-hostname=")
    flags+=("--server=")
    local_nonpersistent_flags+=("--server=")
    flags+=("--stats-password=")
    local_nonpersistent_flags+=("--stats-password=")
    flags+=("--stats-port=")
    local_nonpersistent_flags+=("--stats-port=")
    flags+=("--stats-user=")
    local_nonpersistent_flags+=("--stats-user=")
    flags+=("--strict-sni")
    local_nonpersistent_flags+=("--strict-sni")
    flags+=("--template=")
    local_nonpersistent_flags+=("--template=")
    flags+=("--token=")
    local_nonpersistent_flags+=("--token=")
    flags+=("--user=")
    local_nonpersistent_flags+=("--user=")
    flags+=("--working-dir=")
    local_nonpersistent_flags+=("--working-dir=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_sti-build_version()
{
    last_command="openshift_infra_sti-build_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra_sti-build()
{
    last_command="openshift_infra_sti-build"
    commands=()
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_infra()
{
    last_command="openshift_infra"
    commands=()
    commands+=("deploy")
    commands+=("diagnostic-pod")
    commands+=("docker-build")
    commands+=("f5-router")
    commands+=("network-diagnostic-pod")
    commands+=("recycle")
    commands+=("router")
    commands+=("sti-build")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_kube()
{
    last_command="openshift_kube"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_kubectl()
{
    last_command="openshift_kubectl"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_options()
{
    last_command="openshift_options"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_etcd()
{
    last_command="openshift_start_etcd"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--config=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_flag+=("--config=")
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_kubernetes_apiserver()
{
    last_command="openshift_start_kubernetes_apiserver"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--admission-control=")
    local_nonpersistent_flags+=("--admission-control=")
    flags+=("--admission-control-config-file=")
    local_nonpersistent_flags+=("--admission-control-config-file=")
    flags+=("--advertise-address=")
    local_nonpersistent_flags+=("--advertise-address=")
    flags+=("--allow-privileged")
    local_nonpersistent_flags+=("--allow-privileged")
    flags+=("--anonymous-auth")
    local_nonpersistent_flags+=("--anonymous-auth")
    flags+=("--apiserver-count=")
    local_nonpersistent_flags+=("--apiserver-count=")
    flags+=("--audit-log-format=")
    local_nonpersistent_flags+=("--audit-log-format=")
    flags+=("--audit-log-maxage=")
    local_nonpersistent_flags+=("--audit-log-maxage=")
    flags+=("--audit-log-maxbackup=")
    local_nonpersistent_flags+=("--audit-log-maxbackup=")
    flags+=("--audit-log-maxsize=")
    local_nonpersistent_flags+=("--audit-log-maxsize=")
    flags+=("--audit-log-path=")
    local_nonpersistent_flags+=("--audit-log-path=")
    flags+=("--audit-policy-file=")
    local_nonpersistent_flags+=("--audit-policy-file=")
    flags+=("--audit-webhook-config-file=")
    local_nonpersistent_flags+=("--audit-webhook-config-file=")
    flags+=("--audit-webhook-mode=")
    local_nonpersistent_flags+=("--audit-webhook-mode=")
    flags+=("--authentication-token-webhook-cache-ttl=")
    local_nonpersistent_flags+=("--authentication-token-webhook-cache-ttl=")
    flags+=("--authentication-token-webhook-config-file=")
    local_nonpersistent_flags+=("--authentication-token-webhook-config-file=")
    flags+=("--authorization-mode=")
    local_nonpersistent_flags+=("--authorization-mode=")
    flags+=("--authorization-policy-file=")
    local_nonpersistent_flags+=("--authorization-policy-file=")
    flags+=("--authorization-webhook-cache-authorized-ttl=")
    local_nonpersistent_flags+=("--authorization-webhook-cache-authorized-ttl=")
    flags+=("--authorization-webhook-cache-unauthorized-ttl=")
    local_nonpersistent_flags+=("--authorization-webhook-cache-unauthorized-ttl=")
    flags+=("--authorization-webhook-config-file=")
    local_nonpersistent_flags+=("--authorization-webhook-config-file=")
    flags+=("--basic-auth-file=")
    local_nonpersistent_flags+=("--basic-auth-file=")
    flags+=("--bind-address=")
    local_nonpersistent_flags+=("--bind-address=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--client-ca-file=")
    local_nonpersistent_flags+=("--client-ca-file=")
    flags+=("--cloud-config=")
    local_nonpersistent_flags+=("--cloud-config=")
    flags+=("--cloud-provider=")
    local_nonpersistent_flags+=("--cloud-provider=")
    flags+=("--contention-profiling")
    local_nonpersistent_flags+=("--contention-profiling")
    flags+=("--cors-allowed-origins=")
    local_nonpersistent_flags+=("--cors-allowed-origins=")
    flags+=("--default-watch-cache-size=")
    local_nonpersistent_flags+=("--default-watch-cache-size=")
    flags+=("--delete-collection-workers=")
    local_nonpersistent_flags+=("--delete-collection-workers=")
    flags+=("--deserialization-cache-size=")
    local_nonpersistent_flags+=("--deserialization-cache-size=")
    flags+=("--enable-aggregator-routing")
    local_nonpersistent_flags+=("--enable-aggregator-routing")
    flags+=("--enable-garbage-collector")
    local_nonpersistent_flags+=("--enable-garbage-collector")
    flags+=("--enable-logs-handler")
    local_nonpersistent_flags+=("--enable-logs-handler")
    flags+=("--enable-swagger-ui")
    local_nonpersistent_flags+=("--enable-swagger-ui")
    flags+=("--etcd-cafile=")
    local_nonpersistent_flags+=("--etcd-cafile=")
    flags+=("--etcd-certfile=")
    local_nonpersistent_flags+=("--etcd-certfile=")
    flags+=("--etcd-keyfile=")
    local_nonpersistent_flags+=("--etcd-keyfile=")
    flags+=("--etcd-prefix=")
    local_nonpersistent_flags+=("--etcd-prefix=")
    flags+=("--etcd-quorum-read")
    local_nonpersistent_flags+=("--etcd-quorum-read")
    flags+=("--etcd-servers=")
    local_nonpersistent_flags+=("--etcd-servers=")
    flags+=("--etcd-servers-overrides=")
    local_nonpersistent_flags+=("--etcd-servers-overrides=")
    flags+=("--event-ttl=")
    local_nonpersistent_flags+=("--event-ttl=")
    flags+=("--experimental-bootstrap-token-auth")
    local_nonpersistent_flags+=("--experimental-bootstrap-token-auth")
    flags+=("--experimental-encryption-provider-config=")
    local_nonpersistent_flags+=("--experimental-encryption-provider-config=")
    flags+=("--experimental-keystone-ca-file=")
    local_nonpersistent_flags+=("--experimental-keystone-ca-file=")
    flags+=("--experimental-keystone-url=")
    local_nonpersistent_flags+=("--experimental-keystone-url=")
    flags+=("--external-hostname=")
    local_nonpersistent_flags+=("--external-hostname=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--insecure-allow-any-token")
    local_nonpersistent_flags+=("--insecure-allow-any-token")
    flags+=("--insecure-bind-address=")
    local_nonpersistent_flags+=("--insecure-bind-address=")
    flags+=("--insecure-port=")
    local_nonpersistent_flags+=("--insecure-port=")
    flags+=("--kubelet-certificate-authority=")
    local_nonpersistent_flags+=("--kubelet-certificate-authority=")
    flags+=("--kubelet-client-certificate=")
    local_nonpersistent_flags+=("--kubelet-client-certificate=")
    flags+=("--kubelet-client-key=")
    local_nonpersistent_flags+=("--kubelet-client-key=")
    flags+=("--kubelet-https")
    local_nonpersistent_flags+=("--kubelet-https")
    flags+=("--kubelet-preferred-address-types=")
    local_nonpersistent_flags+=("--kubelet-preferred-address-types=")
    flags+=("--kubelet-read-only-port=")
    local_nonpersistent_flags+=("--kubelet-read-only-port=")
    flags+=("--kubelet-timeout=")
    local_nonpersistent_flags+=("--kubelet-timeout=")
    flags+=("--kubernetes-service-node-port=")
    local_nonpersistent_flags+=("--kubernetes-service-node-port=")
    flags+=("--master-service-namespace=")
    local_nonpersistent_flags+=("--master-service-namespace=")
    flags+=("--max-connection-bytes-per-sec=")
    local_nonpersistent_flags+=("--max-connection-bytes-per-sec=")
    flags+=("--max-mutating-requests-inflight=")
    local_nonpersistent_flags+=("--max-mutating-requests-inflight=")
    flags+=("--max-requests-inflight=")
    local_nonpersistent_flags+=("--max-requests-inflight=")
    flags+=("--min-request-timeout=")
    local_nonpersistent_flags+=("--min-request-timeout=")
    flags+=("--oidc-ca-file=")
    local_nonpersistent_flags+=("--oidc-ca-file=")
    flags+=("--oidc-client-id=")
    local_nonpersistent_flags+=("--oidc-client-id=")
    flags+=("--oidc-groups-claim=")
    local_nonpersistent_flags+=("--oidc-groups-claim=")
    flags+=("--oidc-issuer-url=")
    local_nonpersistent_flags+=("--oidc-issuer-url=")
    flags+=("--oidc-username-claim=")
    local_nonpersistent_flags+=("--oidc-username-claim=")
    flags+=("--profiling")
    local_nonpersistent_flags+=("--profiling")
    flags+=("--proxy-client-cert-file=")
    local_nonpersistent_flags+=("--proxy-client-cert-file=")
    flags+=("--proxy-client-key-file=")
    local_nonpersistent_flags+=("--proxy-client-key-file=")
    flags+=("--repair-malformed-updates")
    local_nonpersistent_flags+=("--repair-malformed-updates")
    flags+=("--request-timeout=")
    local_nonpersistent_flags+=("--request-timeout=")
    flags+=("--requestheader-allowed-names=")
    local_nonpersistent_flags+=("--requestheader-allowed-names=")
    flags+=("--requestheader-client-ca-file=")
    local_nonpersistent_flags+=("--requestheader-client-ca-file=")
    flags+=("--requestheader-extra-headers-prefix=")
    local_nonpersistent_flags+=("--requestheader-extra-headers-prefix=")
    flags+=("--requestheader-group-headers=")
    local_nonpersistent_flags+=("--requestheader-group-headers=")
    flags+=("--requestheader-username-headers=")
    local_nonpersistent_flags+=("--requestheader-username-headers=")
    flags+=("--runtime-config=")
    local_nonpersistent_flags+=("--runtime-config=")
    flags+=("--secure-port=")
    local_nonpersistent_flags+=("--secure-port=")
    flags+=("--service-account-key-file=")
    local_nonpersistent_flags+=("--service-account-key-file=")
    flags+=("--service-account-lookup")
    local_nonpersistent_flags+=("--service-account-lookup")
    flags+=("--service-cluster-ip-range=")
    local_nonpersistent_flags+=("--service-cluster-ip-range=")
    flags+=("--service-node-port-range=")
    local_nonpersistent_flags+=("--service-node-port-range=")
    flags+=("--ssh-keyfile=")
    local_nonpersistent_flags+=("--ssh-keyfile=")
    flags+=("--ssh-user=")
    local_nonpersistent_flags+=("--ssh-user=")
    flags+=("--storage-backend=")
    local_nonpersistent_flags+=("--storage-backend=")
    flags+=("--storage-media-type=")
    local_nonpersistent_flags+=("--storage-media-type=")
    flags+=("--storage-versions=")
    local_nonpersistent_flags+=("--storage-versions=")
    flags+=("--target-ram-mb=")
    local_nonpersistent_flags+=("--target-ram-mb=")
    flags+=("--tls-ca-file=")
    local_nonpersistent_flags+=("--tls-ca-file=")
    flags+=("--tls-cert-file=")
    local_nonpersistent_flags+=("--tls-cert-file=")
    flags+=("--tls-private-key-file=")
    local_nonpersistent_flags+=("--tls-private-key-file=")
    flags+=("--tls-sni-cert-key=")
    local_nonpersistent_flags+=("--tls-sni-cert-key=")
    flags+=("--token-auth-file=")
    local_nonpersistent_flags+=("--token-auth-file=")
    flags+=("--watch-cache")
    local_nonpersistent_flags+=("--watch-cache")
    flags+=("--watch-cache-sizes=")
    local_nonpersistent_flags+=("--watch-cache-sizes=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_kubernetes_controller-manager()
{
    last_command="openshift_start_kubernetes_controller-manager"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--address=")
    local_nonpersistent_flags+=("--address=")
    flags+=("--allocate-node-cidrs")
    local_nonpersistent_flags+=("--allocate-node-cidrs")
    flags+=("--attach-detach-reconcile-sync-period=")
    local_nonpersistent_flags+=("--attach-detach-reconcile-sync-period=")
    flags+=("--cidr-allocator-type=")
    local_nonpersistent_flags+=("--cidr-allocator-type=")
    flags+=("--cloud-config=")
    local_nonpersistent_flags+=("--cloud-config=")
    flags+=("--cloud-provider=")
    local_nonpersistent_flags+=("--cloud-provider=")
    flags+=("--cluster-cidr=")
    local_nonpersistent_flags+=("--cluster-cidr=")
    flags+=("--cluster-name=")
    local_nonpersistent_flags+=("--cluster-name=")
    flags+=("--cluster-signing-cert-file=")
    local_nonpersistent_flags+=("--cluster-signing-cert-file=")
    flags+=("--cluster-signing-key-file=")
    local_nonpersistent_flags+=("--cluster-signing-key-file=")
    flags+=("--concurrent-deployment-syncs=")
    local_nonpersistent_flags+=("--concurrent-deployment-syncs=")
    flags+=("--concurrent-endpoint-syncs=")
    local_nonpersistent_flags+=("--concurrent-endpoint-syncs=")
    flags+=("--concurrent-gc-syncs=")
    local_nonpersistent_flags+=("--concurrent-gc-syncs=")
    flags+=("--concurrent-namespace-syncs=")
    local_nonpersistent_flags+=("--concurrent-namespace-syncs=")
    flags+=("--concurrent-rc-syncs=")
    local_nonpersistent_flags+=("--concurrent-rc-syncs=")
    flags+=("--concurrent-replicaset-syncs=")
    local_nonpersistent_flags+=("--concurrent-replicaset-syncs=")
    flags+=("--concurrent-resource-quota-syncs=")
    local_nonpersistent_flags+=("--concurrent-resource-quota-syncs=")
    flags+=("--concurrent-service-syncs=")
    local_nonpersistent_flags+=("--concurrent-service-syncs=")
    flags+=("--concurrent-serviceaccount-token-syncs=")
    local_nonpersistent_flags+=("--concurrent-serviceaccount-token-syncs=")
    flags+=("--configure-cloud-routes")
    local_nonpersistent_flags+=("--configure-cloud-routes")
    flags+=("--contention-profiling")
    local_nonpersistent_flags+=("--contention-profiling")
    flags+=("--controller-start-interval=")
    local_nonpersistent_flags+=("--controller-start-interval=")
    flags+=("--controllers=")
    local_nonpersistent_flags+=("--controllers=")
    flags+=("--deployment-controller-sync-period=")
    local_nonpersistent_flags+=("--deployment-controller-sync-period=")
    flags+=("--disable-attach-detach-reconcile-sync")
    local_nonpersistent_flags+=("--disable-attach-detach-reconcile-sync")
    flags+=("--enable-dynamic-provisioning")
    local_nonpersistent_flags+=("--enable-dynamic-provisioning")
    flags+=("--enable-garbage-collector")
    local_nonpersistent_flags+=("--enable-garbage-collector")
    flags+=("--enable-hostpath-provisioner")
    local_nonpersistent_flags+=("--enable-hostpath-provisioner")
    flags+=("--enable-taint-manager")
    local_nonpersistent_flags+=("--enable-taint-manager")
    flags+=("--experimental-cluster-signing-duration=")
    local_nonpersistent_flags+=("--experimental-cluster-signing-duration=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--flex-volume-plugin-dir=")
    local_nonpersistent_flags+=("--flex-volume-plugin-dir=")
    flags+=("--horizontal-pod-autoscaler-downscale-delay=")
    local_nonpersistent_flags+=("--horizontal-pod-autoscaler-downscale-delay=")
    flags+=("--horizontal-pod-autoscaler-sync-period=")
    local_nonpersistent_flags+=("--horizontal-pod-autoscaler-sync-period=")
    flags+=("--horizontal-pod-autoscaler-upscale-delay=")
    local_nonpersistent_flags+=("--horizontal-pod-autoscaler-upscale-delay=")
    flags+=("--horizontal-pod-autoscaler-use-rest-clients")
    local_nonpersistent_flags+=("--horizontal-pod-autoscaler-use-rest-clients")
    flags+=("--insecure-experimental-approve-all-kubelet-csrs-for-group=")
    local_nonpersistent_flags+=("--insecure-experimental-approve-all-kubelet-csrs-for-group=")
    flags+=("--kube-api-burst=")
    local_nonpersistent_flags+=("--kube-api-burst=")
    flags+=("--kube-api-content-type=")
    local_nonpersistent_flags+=("--kube-api-content-type=")
    flags+=("--kube-api-qps=")
    local_nonpersistent_flags+=("--kube-api-qps=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--large-cluster-size-threshold=")
    local_nonpersistent_flags+=("--large-cluster-size-threshold=")
    flags+=("--leader-elect")
    local_nonpersistent_flags+=("--leader-elect")
    flags+=("--leader-elect-lease-duration=")
    local_nonpersistent_flags+=("--leader-elect-lease-duration=")
    flags+=("--leader-elect-renew-deadline=")
    local_nonpersistent_flags+=("--leader-elect-renew-deadline=")
    flags+=("--leader-elect-resource-lock=")
    local_nonpersistent_flags+=("--leader-elect-resource-lock=")
    flags+=("--leader-elect-retry-period=")
    local_nonpersistent_flags+=("--leader-elect-retry-period=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--min-resync-period=")
    local_nonpersistent_flags+=("--min-resync-period=")
    flags+=("--namespace-sync-period=")
    local_nonpersistent_flags+=("--namespace-sync-period=")
    flags+=("--node-cidr-mask-size=")
    local_nonpersistent_flags+=("--node-cidr-mask-size=")
    flags+=("--node-eviction-rate=")
    local_nonpersistent_flags+=("--node-eviction-rate=")
    flags+=("--node-monitor-grace-period=")
    local_nonpersistent_flags+=("--node-monitor-grace-period=")
    flags+=("--node-monitor-period=")
    local_nonpersistent_flags+=("--node-monitor-period=")
    flags+=("--node-startup-grace-period=")
    local_nonpersistent_flags+=("--node-startup-grace-period=")
    flags+=("--pod-eviction-timeout=")
    local_nonpersistent_flags+=("--pod-eviction-timeout=")
    flags+=("--port=")
    local_nonpersistent_flags+=("--port=")
    flags+=("--profiling")
    local_nonpersistent_flags+=("--profiling")
    flags+=("--pv-recycler-increment-timeout-nfs=")
    local_nonpersistent_flags+=("--pv-recycler-increment-timeout-nfs=")
    flags+=("--pv-recycler-minimum-timeout-hostpath=")
    local_nonpersistent_flags+=("--pv-recycler-minimum-timeout-hostpath=")
    flags+=("--pv-recycler-minimum-timeout-nfs=")
    local_nonpersistent_flags+=("--pv-recycler-minimum-timeout-nfs=")
    flags+=("--pv-recycler-pod-template-filepath-hostpath=")
    local_nonpersistent_flags+=("--pv-recycler-pod-template-filepath-hostpath=")
    flags+=("--pv-recycler-pod-template-filepath-nfs=")
    local_nonpersistent_flags+=("--pv-recycler-pod-template-filepath-nfs=")
    flags+=("--pv-recycler-timeout-increment-hostpath=")
    local_nonpersistent_flags+=("--pv-recycler-timeout-increment-hostpath=")
    flags+=("--pvclaimbinder-sync-period=")
    local_nonpersistent_flags+=("--pvclaimbinder-sync-period=")
    flags+=("--resource-quota-sync-period=")
    local_nonpersistent_flags+=("--resource-quota-sync-period=")
    flags+=("--root-ca-file=")
    local_nonpersistent_flags+=("--root-ca-file=")
    flags+=("--route-reconciliation-period=")
    local_nonpersistent_flags+=("--route-reconciliation-period=")
    flags+=("--secondary-node-eviction-rate=")
    local_nonpersistent_flags+=("--secondary-node-eviction-rate=")
    flags+=("--service-account-private-key-file=")
    local_nonpersistent_flags+=("--service-account-private-key-file=")
    flags+=("--service-cluster-ip-range=")
    local_nonpersistent_flags+=("--service-cluster-ip-range=")
    flags+=("--service-sync-period=")
    local_nonpersistent_flags+=("--service-sync-period=")
    flags+=("--terminated-pod-gc-threshold=")
    local_nonpersistent_flags+=("--terminated-pod-gc-threshold=")
    flags+=("--unhealthy-zone-threshold=")
    local_nonpersistent_flags+=("--unhealthy-zone-threshold=")
    flags+=("--use-service-account-credentials")
    local_nonpersistent_flags+=("--use-service-account-credentials")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_kubernetes_kube-proxy()
{
    last_command="openshift_start_kubernetes_kube-proxy"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--bind-address=")
    local_nonpersistent_flags+=("--bind-address=")
    flags+=("--cleanup-iptables")
    local_nonpersistent_flags+=("--cleanup-iptables")
    flags+=("--cluster-cidr=")
    local_nonpersistent_flags+=("--cluster-cidr=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml|json")
    local_nonpersistent_flags+=("--config=")
    flags+=("--config-sync-period=")
    local_nonpersistent_flags+=("--config-sync-period=")
    flags+=("--conntrack-max-per-core=")
    local_nonpersistent_flags+=("--conntrack-max-per-core=")
    flags+=("--conntrack-min=")
    local_nonpersistent_flags+=("--conntrack-min=")
    flags+=("--conntrack-tcp-timeout-close-wait=")
    local_nonpersistent_flags+=("--conntrack-tcp-timeout-close-wait=")
    flags+=("--conntrack-tcp-timeout-established=")
    local_nonpersistent_flags+=("--conntrack-tcp-timeout-established=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--healthz-bind-address=")
    local_nonpersistent_flags+=("--healthz-bind-address=")
    flags+=("--healthz-port=")
    local_nonpersistent_flags+=("--healthz-port=")
    flags+=("--hostname-override=")
    local_nonpersistent_flags+=("--hostname-override=")
    flags+=("--iptables-masquerade-bit=")
    local_nonpersistent_flags+=("--iptables-masquerade-bit=")
    flags+=("--iptables-min-sync-period=")
    local_nonpersistent_flags+=("--iptables-min-sync-period=")
    flags+=("--iptables-sync-period=")
    local_nonpersistent_flags+=("--iptables-sync-period=")
    flags+=("--kube-api-burst=")
    local_nonpersistent_flags+=("--kube-api-burst=")
    flags+=("--kube-api-content-type=")
    local_nonpersistent_flags+=("--kube-api-content-type=")
    flags+=("--kube-api-qps=")
    local_nonpersistent_flags+=("--kube-api-qps=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--masquerade-all")
    local_nonpersistent_flags+=("--masquerade-all")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--metrics-bind-address=")
    local_nonpersistent_flags+=("--metrics-bind-address=")
    flags+=("--oom-score-adj=")
    local_nonpersistent_flags+=("--oom-score-adj=")
    flags+=("--profiling")
    local_nonpersistent_flags+=("--profiling")
    flags+=("--proxy-mode=")
    local_nonpersistent_flags+=("--proxy-mode=")
    flags+=("--proxy-port-range=")
    local_nonpersistent_flags+=("--proxy-port-range=")
    flags+=("--udp-timeout=")
    local_nonpersistent_flags+=("--udp-timeout=")
    flags+=("--write-config-to=")
    local_nonpersistent_flags+=("--write-config-to=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_kubernetes_kubelet()
{
    last_command="openshift_start_kubernetes_kubelet"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--address=")
    local_nonpersistent_flags+=("--address=")
    flags+=("--allow-privileged")
    local_nonpersistent_flags+=("--allow-privileged")
    flags+=("--anonymous-auth")
    local_nonpersistent_flags+=("--anonymous-auth")
    flags+=("--authentication-token-webhook")
    local_nonpersistent_flags+=("--authentication-token-webhook")
    flags+=("--authentication-token-webhook-cache-ttl=")
    local_nonpersistent_flags+=("--authentication-token-webhook-cache-ttl=")
    flags+=("--authorization-mode=")
    local_nonpersistent_flags+=("--authorization-mode=")
    flags+=("--authorization-webhook-cache-authorized-ttl=")
    local_nonpersistent_flags+=("--authorization-webhook-cache-authorized-ttl=")
    flags+=("--authorization-webhook-cache-unauthorized-ttl=")
    local_nonpersistent_flags+=("--authorization-webhook-cache-unauthorized-ttl=")
    flags+=("--bootstrap-kubeconfig=")
    local_nonpersistent_flags+=("--bootstrap-kubeconfig=")
    flags+=("--cadvisor-port=")
    local_nonpersistent_flags+=("--cadvisor-port=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--cgroup-driver=")
    local_nonpersistent_flags+=("--cgroup-driver=")
    flags+=("--cgroup-root=")
    local_nonpersistent_flags+=("--cgroup-root=")
    flags+=("--cgroups-per-qos")
    local_nonpersistent_flags+=("--cgroups-per-qos")
    flags+=("--chaos-chance=")
    local_nonpersistent_flags+=("--chaos-chance=")
    flags+=("--client-ca-file=")
    local_nonpersistent_flags+=("--client-ca-file=")
    flags+=("--cloud-config=")
    local_nonpersistent_flags+=("--cloud-config=")
    flags+=("--cloud-provider=")
    local_nonpersistent_flags+=("--cloud-provider=")
    flags+=("--cluster-dns=")
    local_nonpersistent_flags+=("--cluster-dns=")
    flags+=("--cluster-domain=")
    local_nonpersistent_flags+=("--cluster-domain=")
    flags+=("--cni-bin-dir=")
    local_nonpersistent_flags+=("--cni-bin-dir=")
    flags+=("--cni-conf-dir=")
    local_nonpersistent_flags+=("--cni-conf-dir=")
    flags+=("--container-runtime=")
    local_nonpersistent_flags+=("--container-runtime=")
    flags+=("--container-runtime-endpoint=")
    local_nonpersistent_flags+=("--container-runtime-endpoint=")
    flags+=("--containerized")
    local_nonpersistent_flags+=("--containerized")
    flags+=("--contention-profiling")
    local_nonpersistent_flags+=("--contention-profiling")
    flags+=("--cpu-cfs-quota")
    local_nonpersistent_flags+=("--cpu-cfs-quota")
    flags+=("--docker-disable-shared-pid")
    local_nonpersistent_flags+=("--docker-disable-shared-pid")
    flags+=("--docker-endpoint=")
    local_nonpersistent_flags+=("--docker-endpoint=")
    flags+=("--enable-controller-attach-detach")
    local_nonpersistent_flags+=("--enable-controller-attach-detach")
    flags+=("--enable-custom-metrics")
    local_nonpersistent_flags+=("--enable-custom-metrics")
    flags+=("--enable-debugging-handlers")
    local_nonpersistent_flags+=("--enable-debugging-handlers")
    flags+=("--enable-server")
    local_nonpersistent_flags+=("--enable-server")
    flags+=("--enforce-node-allocatable=")
    local_nonpersistent_flags+=("--enforce-node-allocatable=")
    flags+=("--event-burst=")
    local_nonpersistent_flags+=("--event-burst=")
    flags+=("--event-qps=")
    local_nonpersistent_flags+=("--event-qps=")
    flags+=("--eviction-hard=")
    local_nonpersistent_flags+=("--eviction-hard=")
    flags+=("--eviction-max-pod-grace-period=")
    local_nonpersistent_flags+=("--eviction-max-pod-grace-period=")
    flags+=("--eviction-minimum-reclaim=")
    local_nonpersistent_flags+=("--eviction-minimum-reclaim=")
    flags+=("--eviction-pressure-transition-period=")
    local_nonpersistent_flags+=("--eviction-pressure-transition-period=")
    flags+=("--eviction-soft=")
    local_nonpersistent_flags+=("--eviction-soft=")
    flags+=("--eviction-soft-grace-period=")
    local_nonpersistent_flags+=("--eviction-soft-grace-period=")
    flags+=("--exit-on-lock-contention")
    local_nonpersistent_flags+=("--exit-on-lock-contention")
    flags+=("--experimental-allocatable-ignore-eviction")
    local_nonpersistent_flags+=("--experimental-allocatable-ignore-eviction")
    flags+=("--experimental-allowed-unsafe-sysctls=")
    local_nonpersistent_flags+=("--experimental-allowed-unsafe-sysctls=")
    flags+=("--experimental-bootstrap-kubeconfig=")
    local_nonpersistent_flags+=("--experimental-bootstrap-kubeconfig=")
    flags+=("--experimental-check-node-capabilities-before-mount")
    local_nonpersistent_flags+=("--experimental-check-node-capabilities-before-mount")
    flags+=("--experimental-fail-swap-on")
    local_nonpersistent_flags+=("--experimental-fail-swap-on")
    flags+=("--experimental-kernel-memcg-notification")
    local_nonpersistent_flags+=("--experimental-kernel-memcg-notification")
    flags+=("--experimental-mounter-path=")
    local_nonpersistent_flags+=("--experimental-mounter-path=")
    flags+=("--experimental-qos-reserved=")
    local_nonpersistent_flags+=("--experimental-qos-reserved=")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--file-check-frequency=")
    local_nonpersistent_flags+=("--file-check-frequency=")
    flags+=("--hairpin-mode=")
    local_nonpersistent_flags+=("--hairpin-mode=")
    flags+=("--healthz-bind-address=")
    local_nonpersistent_flags+=("--healthz-bind-address=")
    flags+=("--healthz-port=")
    local_nonpersistent_flags+=("--healthz-port=")
    flags+=("--host-ipc-sources=")
    local_nonpersistent_flags+=("--host-ipc-sources=")
    flags+=("--host-network-sources=")
    local_nonpersistent_flags+=("--host-network-sources=")
    flags+=("--host-pid-sources=")
    local_nonpersistent_flags+=("--host-pid-sources=")
    flags+=("--hostname-override=")
    local_nonpersistent_flags+=("--hostname-override=")
    flags+=("--http-check-frequency=")
    local_nonpersistent_flags+=("--http-check-frequency=")
    flags+=("--image-gc-high-threshold=")
    local_nonpersistent_flags+=("--image-gc-high-threshold=")
    flags+=("--image-gc-low-threshold=")
    local_nonpersistent_flags+=("--image-gc-low-threshold=")
    flags+=("--image-pull-progress-deadline=")
    local_nonpersistent_flags+=("--image-pull-progress-deadline=")
    flags+=("--image-service-endpoint=")
    local_nonpersistent_flags+=("--image-service-endpoint=")
    flags+=("--iptables-drop-bit=")
    local_nonpersistent_flags+=("--iptables-drop-bit=")
    flags+=("--iptables-masquerade-bit=")
    local_nonpersistent_flags+=("--iptables-masquerade-bit=")
    flags+=("--keep-terminated-pod-volumes")
    local_nonpersistent_flags+=("--keep-terminated-pod-volumes")
    flags+=("--kube-api-burst=")
    local_nonpersistent_flags+=("--kube-api-burst=")
    flags+=("--kube-api-content-type=")
    local_nonpersistent_flags+=("--kube-api-content-type=")
    flags+=("--kube-api-qps=")
    local_nonpersistent_flags+=("--kube-api-qps=")
    flags+=("--kube-reserved=")
    local_nonpersistent_flags+=("--kube-reserved=")
    flags+=("--kube-reserved-cgroup=")
    local_nonpersistent_flags+=("--kube-reserved-cgroup=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubelet-cgroups=")
    local_nonpersistent_flags+=("--kubelet-cgroups=")
    flags+=("--lock-file=")
    local_nonpersistent_flags+=("--lock-file=")
    flags+=("--make-iptables-util-chains")
    local_nonpersistent_flags+=("--make-iptables-util-chains")
    flags+=("--manifest-url=")
    local_nonpersistent_flags+=("--manifest-url=")
    flags+=("--manifest-url-header=")
    local_nonpersistent_flags+=("--manifest-url-header=")
    flags+=("--max-open-files=")
    local_nonpersistent_flags+=("--max-open-files=")
    flags+=("--max-pods=")
    local_nonpersistent_flags+=("--max-pods=")
    flags+=("--minimum-image-ttl-duration=")
    local_nonpersistent_flags+=("--minimum-image-ttl-duration=")
    flags+=("--network-plugin=")
    local_nonpersistent_flags+=("--network-plugin=")
    flags+=("--network-plugin-mtu=")
    local_nonpersistent_flags+=("--network-plugin-mtu=")
    flags+=("--node-ip=")
    local_nonpersistent_flags+=("--node-ip=")
    flags+=("--node-labels=")
    local_nonpersistent_flags+=("--node-labels=")
    flags+=("--node-status-update-frequency=")
    local_nonpersistent_flags+=("--node-status-update-frequency=")
    flags+=("--oom-score-adj=")
    local_nonpersistent_flags+=("--oom-score-adj=")
    flags+=("--pod-cidr=")
    local_nonpersistent_flags+=("--pod-cidr=")
    flags+=("--pod-infra-container-image=")
    local_nonpersistent_flags+=("--pod-infra-container-image=")
    flags+=("--pod-manifest-path=")
    local_nonpersistent_flags+=("--pod-manifest-path=")
    flags+=("--pods-per-core=")
    local_nonpersistent_flags+=("--pods-per-core=")
    flags+=("--port=")
    local_nonpersistent_flags+=("--port=")
    flags+=("--protect-kernel-defaults")
    local_nonpersistent_flags+=("--protect-kernel-defaults")
    flags+=("--provider-id=")
    local_nonpersistent_flags+=("--provider-id=")
    flags+=("--read-only-port=")
    local_nonpersistent_flags+=("--read-only-port=")
    flags+=("--really-crash-for-testing")
    local_nonpersistent_flags+=("--really-crash-for-testing")
    flags+=("--register-node")
    local_nonpersistent_flags+=("--register-node")
    flags+=("--register-with-taints=")
    local_nonpersistent_flags+=("--register-with-taints=")
    flags+=("--registry-burst=")
    local_nonpersistent_flags+=("--registry-burst=")
    flags+=("--registry-qps=")
    local_nonpersistent_flags+=("--registry-qps=")
    flags+=("--require-kubeconfig")
    local_nonpersistent_flags+=("--require-kubeconfig")
    flags+=("--resolv-conf=")
    local_nonpersistent_flags+=("--resolv-conf=")
    flags+=("--rkt-api-endpoint=")
    local_nonpersistent_flags+=("--rkt-api-endpoint=")
    flags+=("--rkt-path=")
    local_nonpersistent_flags+=("--rkt-path=")
    flags+=("--root-dir=")
    local_nonpersistent_flags+=("--root-dir=")
    flags+=("--runonce")
    local_nonpersistent_flags+=("--runonce")
    flags+=("--runtime-cgroups=")
    local_nonpersistent_flags+=("--runtime-cgroups=")
    flags+=("--runtime-request-timeout=")
    local_nonpersistent_flags+=("--runtime-request-timeout=")
    flags+=("--seccomp-profile-root=")
    local_nonpersistent_flags+=("--seccomp-profile-root=")
    flags+=("--serialize-image-pulls")
    local_nonpersistent_flags+=("--serialize-image-pulls")
    flags+=("--streaming-connection-idle-timeout=")
    local_nonpersistent_flags+=("--streaming-connection-idle-timeout=")
    flags+=("--sync-frequency=")
    local_nonpersistent_flags+=("--sync-frequency=")
    flags+=("--system-cgroups=")
    local_nonpersistent_flags+=("--system-cgroups=")
    flags+=("--system-reserved=")
    local_nonpersistent_flags+=("--system-reserved=")
    flags+=("--system-reserved-cgroup=")
    local_nonpersistent_flags+=("--system-reserved-cgroup=")
    flags+=("--tls-cert-file=")
    local_nonpersistent_flags+=("--tls-cert-file=")
    flags+=("--tls-private-key-file=")
    local_nonpersistent_flags+=("--tls-private-key-file=")
    flags+=("--volume-plugin-dir=")
    local_nonpersistent_flags+=("--volume-plugin-dir=")
    flags+=("--volume-stats-agg-period=")
    local_nonpersistent_flags+=("--volume-stats-agg-period=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_kubernetes_scheduler()
{
    last_command="openshift_start_kubernetes_scheduler"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--address=")
    local_nonpersistent_flags+=("--address=")
    flags+=("--algorithm-provider=")
    local_nonpersistent_flags+=("--algorithm-provider=")
    flags+=("--contention-profiling")
    local_nonpersistent_flags+=("--contention-profiling")
    flags+=("--feature-gates=")
    local_nonpersistent_flags+=("--feature-gates=")
    flags+=("--kube-api-burst=")
    local_nonpersistent_flags+=("--kube-api-burst=")
    flags+=("--kube-api-content-type=")
    local_nonpersistent_flags+=("--kube-api-content-type=")
    flags+=("--kube-api-qps=")
    local_nonpersistent_flags+=("--kube-api-qps=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--leader-elect")
    local_nonpersistent_flags+=("--leader-elect")
    flags+=("--leader-elect-lease-duration=")
    local_nonpersistent_flags+=("--leader-elect-lease-duration=")
    flags+=("--leader-elect-renew-deadline=")
    local_nonpersistent_flags+=("--leader-elect-renew-deadline=")
    flags+=("--leader-elect-resource-lock=")
    local_nonpersistent_flags+=("--leader-elect-resource-lock=")
    flags+=("--leader-elect-retry-period=")
    local_nonpersistent_flags+=("--leader-elect-retry-period=")
    flags+=("--lock-object-name=")
    local_nonpersistent_flags+=("--lock-object-name=")
    flags+=("--lock-object-namespace=")
    local_nonpersistent_flags+=("--lock-object-namespace=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--policy-config-file=")
    local_nonpersistent_flags+=("--policy-config-file=")
    flags+=("--policy-configmap=")
    local_nonpersistent_flags+=("--policy-configmap=")
    flags+=("--policy-configmap-namespace=")
    local_nonpersistent_flags+=("--policy-configmap-namespace=")
    flags+=("--port=")
    local_nonpersistent_flags+=("--port=")
    flags+=("--profiling")
    local_nonpersistent_flags+=("--profiling")
    flags+=("--scheduler-name=")
    local_nonpersistent_flags+=("--scheduler-name=")
    flags+=("--use-legacy-policy-config")
    local_nonpersistent_flags+=("--use-legacy-policy-config")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_kubernetes()
{
    last_command="openshift_start_kubernetes"
    commands=()
    commands+=("apiserver")
    commands+=("controller-manager")
    commands+=("kube-proxy")
    commands+=("kubelet")
    commands+=("scheduler")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_master_api()
{
    last_command="openshift_start_master_api"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--config=")
    flags+=("--listen=")
    local_nonpersistent_flags+=("--listen=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_master_controllers()
{
    last_command="openshift_start_master_controllers"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--config=")
    flags+=("--listen=")
    local_nonpersistent_flags+=("--listen=")
    flags+=("--lock-service-name=")
    local_nonpersistent_flags+=("--lock-service-name=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_master()
{
    last_command="openshift_start_master"
    commands=()
    commands+=("api")
    commands+=("controllers")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--certificate-authority=")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--config=")
    flags+=("--cors-allowed-origins=")
    local_nonpersistent_flags+=("--cors-allowed-origins=")
    flags+=("--create-certs")
    local_nonpersistent_flags+=("--create-certs")
    flags+=("--dns=")
    local_nonpersistent_flags+=("--dns=")
    flags+=("--etcd=")
    local_nonpersistent_flags+=("--etcd=")
    flags+=("--etcd-dir=")
    flags_with_completion+=("--etcd-dir")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--etcd-dir=")
    flags+=("--expire-days=")
    local_nonpersistent_flags+=("--expire-days=")
    flags+=("--host-subnet-length=")
    local_nonpersistent_flags+=("--host-subnet-length=")
    flags+=("--images=")
    local_nonpersistent_flags+=("--images=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubernetes=")
    local_nonpersistent_flags+=("--kubernetes=")
    flags+=("--latest-images")
    local_nonpersistent_flags+=("--latest-images")
    flags+=("--listen=")
    local_nonpersistent_flags+=("--listen=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--network-cidr=")
    local_nonpersistent_flags+=("--network-cidr=")
    flags+=("--network-plugin=")
    local_nonpersistent_flags+=("--network-plugin=")
    flags+=("--pause")
    local_nonpersistent_flags+=("--pause")
    flags+=("--portal-net=")
    local_nonpersistent_flags+=("--portal-net=")
    flags+=("--public-master=")
    local_nonpersistent_flags+=("--public-master=")
    flags+=("--signer-expire-days=")
    local_nonpersistent_flags+=("--signer-expire-days=")
    flags+=("--write-config=")
    flags_with_completion+=("--write-config")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--write-config=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_network()
{
    last_command="openshift_start_network"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--config=")
    flags+=("--disable=")
    local_nonpersistent_flags+=("--disable=")
    flags+=("--enable=")
    local_nonpersistent_flags+=("--enable=")
    flags+=("--images=")
    local_nonpersistent_flags+=("--images=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubernetes=")
    local_nonpersistent_flags+=("--kubernetes=")
    flags+=("--latest-images")
    local_nonpersistent_flags+=("--latest-images")
    flags+=("--network-plugin=")
    local_nonpersistent_flags+=("--network-plugin=")
    flags+=("--recursive-resolv-conf=")
    local_nonpersistent_flags+=("--recursive-resolv-conf=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_node()
{
    last_command="openshift_start_node"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--bootstrap")
    local_nonpersistent_flags+=("--bootstrap")
    flags+=("--config=")
    flags_with_completion+=("--config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--config=")
    flags+=("--disable=")
    local_nonpersistent_flags+=("--disable=")
    flags+=("--enable=")
    local_nonpersistent_flags+=("--enable=")
    flags+=("--expire-days=")
    local_nonpersistent_flags+=("--expire-days=")
    flags+=("--hostname=")
    local_nonpersistent_flags+=("--hostname=")
    flags+=("--images=")
    local_nonpersistent_flags+=("--images=")
    flags+=("--kubeconfig=")
    local_nonpersistent_flags+=("--kubeconfig=")
    flags+=("--kubernetes=")
    local_nonpersistent_flags+=("--kubernetes=")
    flags+=("--latest-images")
    local_nonpersistent_flags+=("--latest-images")
    flags+=("--listen=")
    local_nonpersistent_flags+=("--listen=")
    flags+=("--network-plugin=")
    local_nonpersistent_flags+=("--network-plugin=")
    flags+=("--recursive-resolv-conf=")
    local_nonpersistent_flags+=("--recursive-resolv-conf=")
    flags+=("--volume-dir=")
    flags_with_completion+=("--volume-dir")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--volume-dir=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start_template-service-broker()
{
    last_command="openshift_start_template-service-broker"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--audit-log-format=")
    local_nonpersistent_flags+=("--audit-log-format=")
    flags+=("--audit-log-maxage=")
    local_nonpersistent_flags+=("--audit-log-maxage=")
    flags+=("--audit-log-maxbackup=")
    local_nonpersistent_flags+=("--audit-log-maxbackup=")
    flags+=("--audit-log-maxsize=")
    local_nonpersistent_flags+=("--audit-log-maxsize=")
    flags+=("--audit-log-path=")
    local_nonpersistent_flags+=("--audit-log-path=")
    flags+=("--audit-policy-file=")
    local_nonpersistent_flags+=("--audit-policy-file=")
    flags+=("--audit-webhook-config-file=")
    local_nonpersistent_flags+=("--audit-webhook-config-file=")
    flags+=("--audit-webhook-mode=")
    local_nonpersistent_flags+=("--audit-webhook-mode=")
    flags+=("--authentication-kubeconfig=")
    local_nonpersistent_flags+=("--authentication-kubeconfig=")
    flags+=("--authentication-skip-lookup")
    local_nonpersistent_flags+=("--authentication-skip-lookup")
    flags+=("--authentication-token-webhook-cache-ttl=")
    local_nonpersistent_flags+=("--authentication-token-webhook-cache-ttl=")
    flags+=("--authorization-kubeconfig=")
    local_nonpersistent_flags+=("--authorization-kubeconfig=")
    flags+=("--authorization-webhook-cache-authorized-ttl=")
    local_nonpersistent_flags+=("--authorization-webhook-cache-authorized-ttl=")
    flags+=("--authorization-webhook-cache-unauthorized-ttl=")
    local_nonpersistent_flags+=("--authorization-webhook-cache-unauthorized-ttl=")
    flags+=("--bind-address=")
    local_nonpersistent_flags+=("--bind-address=")
    flags+=("--cert-dir=")
    local_nonpersistent_flags+=("--cert-dir=")
    flags+=("--client-ca-file=")
    local_nonpersistent_flags+=("--client-ca-file=")
    flags+=("--config=")
    local_nonpersistent_flags+=("--config=")
    flags+=("--contention-profiling")
    local_nonpersistent_flags+=("--contention-profiling")
    flags+=("--enable-swagger-ui")
    local_nonpersistent_flags+=("--enable-swagger-ui")
    flags+=("--profiling")
    local_nonpersistent_flags+=("--profiling")
    flags+=("--requestheader-allowed-names=")
    local_nonpersistent_flags+=("--requestheader-allowed-names=")
    flags+=("--requestheader-client-ca-file=")
    local_nonpersistent_flags+=("--requestheader-client-ca-file=")
    flags+=("--requestheader-extra-headers-prefix=")
    local_nonpersistent_flags+=("--requestheader-extra-headers-prefix=")
    flags+=("--requestheader-group-headers=")
    local_nonpersistent_flags+=("--requestheader-group-headers=")
    flags+=("--requestheader-username-headers=")
    local_nonpersistent_flags+=("--requestheader-username-headers=")
    flags+=("--secure-port=")
    local_nonpersistent_flags+=("--secure-port=")
    flags+=("--tls-ca-file=")
    local_nonpersistent_flags+=("--tls-ca-file=")
    flags+=("--tls-cert-file=")
    local_nonpersistent_flags+=("--tls-cert-file=")
    flags+=("--tls-private-key-file=")
    local_nonpersistent_flags+=("--tls-private-key-file=")
    flags+=("--tls-sni-cert-key=")
    local_nonpersistent_flags+=("--tls-sni-cert-key=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_start()
{
    last_command="openshift_start"
    commands=()
    commands+=("etcd")
    commands+=("kubernetes")
    commands+=("master")
    commands+=("network")
    commands+=("node")
    commands+=("template-service-broker")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--certificate-authority=")
    flags_with_completion+=("--certificate-authority")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--certificate-authority=")
    flags+=("--cors-allowed-origins=")
    local_nonpersistent_flags+=("--cors-allowed-origins=")
    flags+=("--create-certs")
    local_nonpersistent_flags+=("--create-certs")
    flags+=("--dns=")
    local_nonpersistent_flags+=("--dns=")
    flags+=("--etcd=")
    local_nonpersistent_flags+=("--etcd=")
    flags+=("--etcd-dir=")
    flags_with_completion+=("--etcd-dir")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--etcd-dir=")
    flags+=("--expire-days=")
    local_nonpersistent_flags+=("--expire-days=")
    flags+=("--hostname=")
    local_nonpersistent_flags+=("--hostname=")
    flags+=("--images=")
    local_nonpersistent_flags+=("--images=")
    flags+=("--latest-images")
    local_nonpersistent_flags+=("--latest-images")
    flags+=("--listen=")
    local_nonpersistent_flags+=("--listen=")
    flags+=("--master=")
    local_nonpersistent_flags+=("--master=")
    flags+=("--master-config=")
    flags_with_completion+=("--master-config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--master-config=")
    flags+=("--network-plugin=")
    local_nonpersistent_flags+=("--network-plugin=")
    flags+=("--node-config=")
    flags_with_completion+=("--node-config")
    flags_completion+=("__handle_filename_extension_flag yaml|yml")
    local_nonpersistent_flags+=("--node-config=")
    flags+=("--pause")
    local_nonpersistent_flags+=("--pause")
    flags+=("--portal-net=")
    local_nonpersistent_flags+=("--portal-net=")
    flags+=("--print-ip")
    local_nonpersistent_flags+=("--print-ip")
    flags+=("--public-master=")
    local_nonpersistent_flags+=("--public-master=")
    flags+=("--recursive-resolv-conf=")
    local_nonpersistent_flags+=("--recursive-resolv-conf=")
    flags+=("--signer-expire-days=")
    local_nonpersistent_flags+=("--signer-expire-days=")
    flags+=("--volume-dir=")
    flags_with_completion+=("--volume-dir")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--volume-dir=")
    flags+=("--write-config=")
    flags_with_completion+=("--write-config")
    flags_completion+=("_filedir")
    local_nonpersistent_flags+=("--write-config=")
    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift_version()
{
    last_command="openshift_version"
    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_openshift()
{
    last_command="openshift"
    commands=()
    commands+=("admin")
    commands+=("cli")
    commands+=("completion")
    commands+=("ex")
    commands+=("infra")
    commands+=("kube")
    commands+=("kubectl")
    commands+=("options")
    commands+=("start")
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--loglevel=")
    flags+=("--logspec=")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

__start_openshift()
{
    local cur prev words cword
    declare -A flaghash 2>/dev/null || :
    if declare -F _init_completion >/dev/null 2>&1; then
        _init_completion -s || return
    else
        __my_init_completion -n "=" || return
    fi

    local c=0
    local flags=()
    local two_word_flags=()
    local local_nonpersistent_flags=()
    local flags_with_completion=()
    local flags_completion=()
    local commands=("openshift")
    local must_have_one_flag=()
    local must_have_one_noun=()
    local last_command
    local nouns=()

    __handle_word
}

if [[ $(type -t compopt) = "builtin" ]]; then
    complete -o default -F __start_openshift openshift
else
    complete -o default -o nospace -F __start_openshift openshift
fi

# ex: ts=4 sw=4 et filetype=sh

BASH_COMPLETION_EOF
}

__kubectl_bash_source <(__kubectl_convert_bash_to_zsh)
